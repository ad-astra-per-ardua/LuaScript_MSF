-- This text is generated by TrigEditPlus

Trigger {
	players = {P1},
	conditions = {
		Never();
		Accumulate(P1, Exactly, 1714197297, Ore);
		Accumulate(P1, Exactly, 503, Ore);
	},
	actions = {
		SetResources(P1, SetTo, 1582042816, Ore);
		SetResources(P1, SetTo, 1758934638, Ore);
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		SetResources(CurrentPlayer, SetTo, 99999999, Ore);
	},
}


Trigger {
	players = {CurrentPlayer},
}


Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2, Exactly, 0, "Zerg Hatchery", "hat1");
	},
	actions = {
		CreateUnit(15, "Protoss Observer", "hat1", Force2);
		KillUnitAt(All, "Protoss Observer", "hat1", Force2);
		Wait(2000);
		CreateUnit(20, "Zerg Zergling", "hat1", Force2);
		CreateUnit(15, "Zerg Hydralisk", "hat1", Force2);
		CreateUnit(15, "Zerg Mutalisk", "hat1", Force2);
		Wait(10000);
		CreateUnit(15, "Protoss Observer", "hat1", Force2);
		KillUnitAt(All, "Protoss Observer", "hat1", Force2);
		Wait(2000);
		CreateUnit(15, "Zerg Guardian", "hat1", Force2);
		CreateUnit(20, "Devouring One (Zergling)", "hat1", Force2);
	},
}


Trigger {
	players = {Force1},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Men", "healZone");
		Deaths(CurrentPlayer, AtLeast, 18, "Zerg Zergling");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Zergling");
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "healZone", 100);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Men", "healZone");
	},
	actions = {
		SetDeaths(CurrentPlayer, Add, 1, "Zerg Zergling");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Test Marine", "convertHero");
		Accumulate(CurrentPlayer, AtLeast, 5000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 5000, Ore);
		RemoveUnitAt(1, "Test Marine", "convertHero", CurrentPlayer);
		CreateUnit(1, "Test Hero Marine", "healZone", CurrentPlayer);
		PlayWAV("sound\\Misc\\LiftOff.WAV");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
	},
}


