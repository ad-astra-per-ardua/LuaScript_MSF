
-- This text is generated by TrigEditPlus
--↓ Tep에 그대로 붙여넣기----------------------------------------
FP = P6
SetForces({P1,P2,P3,P4},{P6,P7,P8},{},{},{P1,P2,P3,P4,P6,P7,P8}) 
SetFixedPlayer(P6)
StartCtrig(1,nil,0,1)
CJump(AllPlayers,0)

CJumpEnd(AllPlayers,0)

Nextptrs = CreateVar(FP)
NoAirCollision(FP)
NoAirCollision(P7)
NoAirCollision(P8)
DoActions(FP,{SetSpeed(SetTo, "#X2")})
-- 여기에 변수, 배열 및 Include류 함수 선언 --


Trigger{
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		ModifyUnitHitPoints(All, "Any unit", AllPlayers, "Anywhere", 100)
	}
}

Trigger { 
	players = {Force2},
	conditions = {
		Always()
	},
	actions = {
		SetDeaths(P9,Add,1,201);
		PreserveTrigger()
	}
}

Trigger { -- 기지유닛 끌당
	players = {Force2},
	conditions = {
		Deaths(P9,Exactly,2000,201)
	},
	actions = {
		Order("Any unit",Force2,"Pulling",Attack,"HealZone");
		SetDeaths(P9,SetTo,0,201);
		PreserveTrigger()
	}
}

Trigger { -- 나간플레이어 유닛삭제
	players = {P8},
	conditions = {
			Always();
		},
	actions = {
			RemoveUnit("Men",P12);
			RemoveUnit(111,P12);
			RemoveUnit(107,P12);
			RemoveUnit(125,P12);
			PreserveTrigger()
		}
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		SetAllianceStatus(Force1,AlliedVictory);
		SetResources(P1, Add, 999999, Ore);
		SetResources(P2, Add, 999999, Ore);
		SetResources(P3, Add, 999999, Ore);
		SetResources(P4, Add, 999999, Ore);
	},
}

Trigger { -- 컴퓨터동맹설정
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		SetResources(P7, SetTo, 9999999, OreAndGas);
		SetResources(P6, SetTo, 9999999, OreAndGas);
		PreserveTrigger();
		SetAllianceStatus(Force1, Enemy);
	},
}

Trigger { 
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript('Turn ON Shared Vision for Player 1');
		RunAIScript('Turn ON Shared Vision for Player 2');
		RunAIScript('Turn ON Shared Vision for Player 3');
		RunAIScript('Turn ON Shared Vision for Player 4');
		RunAIScript('Turn ON Shared Vision for Player 5');
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript("Turn ON Shared Vision for Player 8");
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript('Turn ON Shared Vision for Player 1');
		RunAIScript('Turn ON Shared Vision for Player 2');
		RunAIScript('Turn ON Shared Vision for Player 3');
		RunAIScript('Turn ON Shared Vision for Player 4');
		RunAIScript('Turn ON Shared Vision for Player 5');
		PreserveTrigger();
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 148, "makeOvermind", P7);
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 127, "makeIoncannon", P7);
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 175, "makeXelnaga", P7);
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 174, "makeTemple", P7);
	},
}

Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 152, "makeDaggoth", P7)
	}
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 200, "makepowergenerator", P7);
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 168, "makestasiscell", P7);
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 151, "makecelebrate", P7);
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer,Exactly,0,158);
		Bring(CurrentPlayer,AtLeast,1,12,"mainLocation")
	},
	actions = {
		RemoveUnitAt(1,12,"mainLocation",CurrentPlayer);
		DisplayText("브금ㄴㄴ");
		SetDeaths(CurrentPlayer,SetTo,1,158);
		PreserveTrigger()
	},
}

Trigger { -- off
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer,Exactly,1,158);
		Bring(CurrentPlayer,AtLeast,1,12,"mainLocation")
	},
	actions = {
		RemoveUnitAt(1,12,"mainLocation",CurrentPlayer);
		DisplayText("브금ㅇㅇ");
		SetDeaths(CurrentPlayer,SetTo,0,158);
		PreserveTrigger()
	},
}

------ 건작 브금 ------


Trigger { -- 경우 1 
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Zerg Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1666, "Zerg Flag Beacon");
		PlayWAV("staredit\\wav\\hat.ogg");
		PlayWAV("staredit\\wav\\hat.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Zerg Flag Beacon");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Zerg Beacon");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Beacon");
		PreserveTrigger();
	},
}

Trigger { -- 경우 2
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Unused Zerg Bldg 5");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1700, "Unused Zerg Bldg");
		PlayWAV("staredit\\wav\\Void.ogg");
		PlayWAV("staredit\\wav\\Void.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Zerg Bldg");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Unused Zerg Bldg 5");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Unused Zerg Bldg 5");
		PreserveTrigger();
	},
}

Trigger { -- 경우 3
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Unused Terran Bldg type   1");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");	
		Deaths(CurrentPlayer, Exactly, 0, 158);	
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1734, "Unused Terran Bldg type   2");
		PlayWAV("staredit\\wav\\L1.ogg");
		PlayWAV("staredit\\wav\\L1.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Terran Bldg type   2");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Unused Terran Bldg type   1");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Unused Terran Bldg type   1");
		PreserveTrigger();
	},
}

Trigger { -- Link with variation with trigger
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 131);
	},
	actions = {
		DisplayText("Hatchery Destroyed! + 40000 Points");
		SetScore(CurrentPlayer, Add, 40000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, "Zerg Beacon");
		PreserveTrigger();
	},
}


function SetMemoryBA(Offset,Type,Value)
	local ret = bit32.band(Offset, 0xFFFFFFFF)%4
	if ret == 0 then
		Mask = 0xFF
	elseif ret == 1 then
		Mask = 0xFF00
		Value = Value * 0x100
	elseif ret == 2 then
		Mask = 0xFF0000
		Value = Value * 0x10000
	elseif ret == 3 then
		Mask = 0xFF000000
		Value = Value * 0x1000000
	end
	return SetMemoryX(Offset-ret,Type,Value,Mask)
end
for i=0, 3 do -- 예약메딕

Trigger { -- 
	players = {i},
	conditions = {
		Always()
	},
	actions = {
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,1);
	},
}

Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,0,"Map Revealer");
		Bring(i,AtLeast,1,17,"Anywhere");
	},
	actions = {
		RemoveUnit(17,i);
		DisplayText("2Tic 예약메딕 사용 200 Ore.");
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,1);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,0);
		SetDeaths(i,SetTo,1,"Map Revealer");
		PreserveTrigger();
	},
}

Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,1,"Map Revealer");
		Bring(i,AtLeast,1,17,"Anywhere");
	},
	actions = {
		RemoveUnit(17,i);
		DisplayText("예약메딕 사용안함 150 Ore.");
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,1);
		SetDeaths(i,SetTo,0,"Map Revealer");
		PreserveTrigger();
	},
}

end
Trigger { -- 1틱메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, "Terran Medic");
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit("Terran Medic", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 2틱메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 2);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit(2, CurrentPlayer);
		PreserveTrigger();
	},
}


Trigger { -- 일마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		CreateUnit(1, 0, "Location 1", CurrentPlayer);
		RemoveUnitAt(1, 0, "mainLocation", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 영마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		RemoveUnitAt(1, 20, "mainLocation", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 스마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 1, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_nevergiveup.ogg");
		RemoveUnitAt(1, 1, "mainLocation", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}



Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 100, "Young Chrysalis");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Young Chrysalis");
		ModifyUnitHitPoints(All, "Any unit", CurrentPlayer, "HealZone", 100);
        ModifyUnitShields(All, "Any unit", CurrentPlayer, "HealZone", 100);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Any unit", "HealZone");
	},
	actions = {
		SetDeaths(CurrentPlayer, Add, 1, "Young Chrysalis");
		PreserveTrigger();
	},
}


Trigger { -- 일마  > 영마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_nevergiveup.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}


Trigger{ -- 해금
    players = {P1},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P2},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P3},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P4},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

------- 건작 ---------

Trigger { -- 건물데스값 -1
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P6,Subtract,1,131);
		SetDeaths(P6,Subtract,1,132);
		SetDeaths(P6,Subtract,1,133);
		SetDeaths(P7,Subtract,1,148);
		SetDeaths(P7,Subtract,1,151);
		SetDeaths(P7,Subtract,1,127);
		SetDeaths(P6,Subtract,1,111);
		SetDeaths(P6,Subtract,1,113);
		SetDeaths(P6,Subtract,1,114);
		SetDeaths(P7,Subtract,1,174);
		SetDeaths(P7,Subtract,1,175);
		SetDeaths(P7,Subtract,1,168);
		SetDeaths(P6,Subtract,1,160);
		SetDeaths(P6,Subtract,1,167);
		SetDeaths(P6,Subtract,1,154);
		PreserveTrigger()
	}
}

GunLock = CreateVar(P6)
GunLock = CreateVar(P7)
GunLock = CreateVar(P8)

CIf(P6,{NVar(GunLock,Exactly,0)})

square1 = CSMakePolygonX(4,80,0,36,0)
square2 = CSMakePolygonX(4,70,45,36,0)

Shape5 = CSMakePolygon(6,80,0,91,1)
Shape4 = CSMakePolygon(6,80,0,61,1)
Shape3 = CSMakePolygon(6,80,0,37,1)
Shape2 = CSMakePolygon(6,80,0,19,1)
Shape1 = CSMakePolygon(6,80,0,7,0)

sixline = CSMakeLine(6,180,0,13,0)
spiral1 = CSMakeSpiral(4, 16, 1/2, 40, 0, CS_Level("Spiral", 4, 16), 1)
spiral2 = CSMakeSpiral(4, 16, 1/2, 40, 45, CS_Level("Spiral", 4, 16), 1)


Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat1");
	},
	actions = {
		SetDeaths(P9,Add,1,0);
		PreserveTrigger();
		
	}
}
-- Hat1 hatchery phase 1
CSPlotOrder(square1, P6, 37, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 50, 0)})
CSPlotOrder(square1, P7, 38, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 85, 0)})
CSPlotOrder(square1, P6, 40, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 115, 0)})
CSPlotOrder(spiral1, P6, 43, "Hat1", nil, 1, 10, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 180, 0)})
CSPlotOrder(square1, P7, 39, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 145, 0)})

CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 275, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 310, 0)})
CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 345, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 380, 0)})

-- Hat1 hatchery phase 2
CSPlotOrder(square2, P7, 37, "Hat1", nil, 1, 20, square2, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 578, 0)})
CSPlotOrder(square2, P6, 38, "Hat1", nil, 1, 20, square2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 613, 0)})
CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 640, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 691, 0)})
CSPlotOrder(square2, P6, 39, "Hat1", nil, 1, 20, square2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 691, 0)})






CIfEnd()

EndCtrig()
ErrorCheck()
EUDTurbo(FP)
-- 에러 체크 함수 선언 위치 --
--↑Tep에 그대로 붙여넣기-----


for i = 0, 10 do
if i%2 == 0 then
Trigger {
	players = {P1},
	conditions = {
		Memory(0x640B60+0xDA*i, Exactly, 0xEABDB2EA);
		Memory(0x640B64+0xDA*i, Exactly, 0x203AA0B3);	
	},
	actions = {
		SetMemory(0x640B60+0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
Trigger {
	players = {P1},
	conditions = {
		Memory(0x640B60+0xDA*i, Exactly, 0x4E524157);
		Memory(0x640B64+0xDA*i, Exactly, 0x3A474E49);	
	},
	actions = {
		SetMemory(0x640B60+0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
else
Trigger {
	players = {P1},
	conditions = {
		MemoryX(0x640B5E + 0xDA*i, Exactly, 0xB2EA0000,0xFFFF0000);
		Memory(0x640B62 + 0xDA*i, Exactly, 0xA0B3EABD);	
		MemoryX(0x640B66 + 0xDA*i, Exactly, 0x203A,0xFFFF);
	},
	actions = {
		SetMemory(0x640B5E + 0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
Trigger {
	players = {P1},
	conditions = {
		MemoryX(0x640B5E + 0xDA*i, Exactly, 0x41570000,0xFFFF0000);
		Memory(0x640B62 + 0xDA*i, Exactly, 0x4E494E52);	
		MemoryX(0x640B66 + 0xDA*i, Exactly, 0x00003A47,0xFFFF);
	},
	actions = {
		SetMemory(0x640B5E + 0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
end
end
