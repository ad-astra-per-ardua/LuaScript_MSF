
-- This text is generated by TrigEditPlus
--↓ Tep에 그대로 붙여넣기----------------------------------------
FP = P6
SetForces({P1,P2,P3,P4},{P6,P7,P8},{},{},{P1,P2,P3,P4,P6,P7,P8}) 
SetFixedPlayer(P6)
StartCtrig(1,nil,0,1)
CJump(AllPlayers,0)

CJumpEnd(AllPlayers,0)

Nextptrs = CreateVar(FP)
NoAirCollision(FP)
DoActions(FP,{SetSpeed(SetTo, "#X2")})
-- 여기에 변수, 배열 및 Include류 함수 선언 --


Trigger{
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		ModifyUnitHitPoints(All, "Any unit", AllPlayers, "Anywhere", 100)
	}
}


Trigger { -- 동맹설정
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		SetAllianceStatus(Force1,AlliedVictory);
		SetResources(P1, Add, 999999, Ore);
		SetResources(P2, Add, 999999, Ore);
		SetResources(P3, Add, 999999, Ore);
		SetResources(P4, Add, 999999, Ore);
	},
}

Trigger { -- 컴퓨터동맹설정
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		SetResources(P7, SetTo, 9999999, OreAndGas);
		SetResources(P6, SetTo, 9999999, OreAndGas);
		PreserveTrigger();
		SetAllianceStatus(Force1, Enemy);
	},
}




Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Zerg Overmind", "makeOvermind", P6);
	},
}


Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Ion Cannon", "makeIoncannon", P6);
	},
}


Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Xel'Naga Temple", "makeXelnaga", P6);
	},
}


Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Protoss Temple", "makeTemple", P6);
	},
}


Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Power Generator", "makepowergenerator", P6);
	},
}


Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Stasis Cell/Prison", "makestasiscell", P6);
	},
}


Trigger {
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, "Zerg Cerebrate", "makecelebrate", P6);
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Terran Medic", "mainLocation");
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnitAt(All, "Terran Medic", "Anywhere", CurrentPlayer);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "mainLocation");
	},
	actions = {
		CreateUnit(1, 0, "Location 1", CurrentPlayer);
		RemoveUnitAt(1, 0, "mainLocation", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger {
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "mainLocation");
	},
	actions = {
		RemoveUnitAt(1, 20, "mainLocation", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger {
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 1, "mainLocation");
	},
	actions = {
		RemoveUnitAt(1, 1, "mainLocation", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}



Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 100, "Young Chrysalis");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Young Chrysalis");
		ModifyUnitHitPoints(All, "Any unit", CurrentPlayer, "HealZone", 1000);
        ModifyUnitShields(All, "Any unit", CurrentPlayer, "HealZone", 1000);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Any unit", "HealZone");
	},
	actions = {
		SetDeaths(CurrentPlayer, Add, 1, "Young Chrysalis");
		PreserveTrigger();
	},
}


function SetMemoryBB(Offset,Type,Value)---삭제금지
	local A = Offset%4
	local X = 0
	local Mask = 0
	local Sub = 0
	if A == 0 then
		Mask = 0x000000FF
		X = 1
	end
	if A == 1 then
		Mask = 0x0000FF00
		X = 256
		Sub = 1
	end
	if A == 2 then
		Mask = 0x00FF0000
		X = 65536
		Sub = 1
	end
	if A == 3 then
		Mask = 0xFF000000
		X = 16777216
		Sub = 1
	end
	local SetMemoryB = SetDeathsX(EPD(Offset)-Sub,Type,Value*X,0,Mask)
	return SetMemoryB
end
Trigger {
	players = {Force1},---모든플레이어 미네랄주기
	conditions = {
	},
	actions = {
		SetResources(CurrentPlayer,Add,45000,Ore);
	}
}

Trigger { -- 싱글플 방지
players = {AllPlayers},
conditions = {
Memory(0x57F0B4, Exactly, 0);
},
actions = {
	DisplayText("\x13\x04멀티플레이 전용 맵입니다. 싱글플레이 버젼으로 시작해주세요.",4);
Victory();
},
}

for i=0, 3 do -- 버튼셋 셋팅 6인용
Trigger { -- 
	players = {i},
	conditions = {
	},
	actions = {
		SetMemoryBB(0x57F27C+(228*i)+2,SetTo,0); --예약메딕1 (17:영웅골럇)
		SetMemoryBB(0x57F27C+(228*i)+11,SetTo,0); --예약메딕2 (22:영웅베슬)
	}
}
end
for i=0, 3 do -- 예약메딕 1단계
Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,0,154);---스위치써도되고 데스값써도됨 데스값 추천
		Bring(i, AtLeast, 1, 84, "Anywhere");--77번 영웅질럿
	},
	actions = {
		RemoveUnitAt(All,84,"Anywhere",i);
		DisplayText("\x04·\x16·\x02·\x1F-\x0F▷“ \x04예약 \x0F메딕(힐) \x04기능을 사용합니다\x04. 「\x0F200ore\x04」\x0F”", 4);
		SetMemoryBB(0x57F27C+(228*i)+2,SetTo,1);---17번 유닛의 버튼셋을 봉인해체 ! !
		SetMemoryBB(0x57F27C+(228*i)+11,SetTo,0);---22번 유닛의 버튼셋을 봉인합니다
		SetMemoryBB(0x57F27C+(228*i)+34,SetTo,0);---34번 유닛의 버튼셋을 봉인합니다
		SetDeaths(i,SetTo,1,154);
		PreserveTrigger();
	},
}
Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,1,154);
		Bring(i, AtLeast, 1, 84, "Anywhere");
	},
	actions = {
		RemoveUnitAt(All,84,"Anywhere",i);
		DisplayText("\x04·\x16·\x02·\x1F-\x1F▷“ \x04예약 \x1F메딕(힐) \x04기능을 사용하지 않습니다. 「\x1F150ore\x04」. \x1F”", 4);
		SetMemoryBB(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBB(0x57F27C+(228*i)+11,SetTo,0);
		SetMemoryBB(0x57F27C+(228*i)+34,SetTo,1);
		SetDeaths(i,SetTo,0,154);
		PreserveTrigger();
	},
}
end
for i=0, 3 do -- 예약메딕 2단계
Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,0,155);
		Bring(i, AtLeast, 1, 83, "Anywhere");--78번 영웅드라군
	},
	actions = {
		RemoveUnitAt(All,83,"Anywhere",i);
		DisplayText("\x04·\x16·\x02·\x1F-\x0F▷“ \x04예약 \x0F메딕(힐) \x04기능을 사용합니다\x04. 「\x0F250ore\x04」\x0F”", 4);
		SetMemoryBB(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBB(0x57F27C+(228*i)+11,SetTo,1);
		SetMemoryBB(0x57F27C+(228*i)+34,SetTo,0);
		SetDeaths(i,SetTo,1,155);
		PreserveTrigger();
	},
}
Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,1,155);
		Bring(i, AtLeast, 1, 83, "Anywhere");
	},
	actions = {
		RemoveUnitAt(All,83,"Anywhere",i);
		DisplayText("\x04·\x16·\x02·\x1F-\x1F▷“ \x04예약 \x1F메딕(힐) \x04기능을 사용하지 않습니다. 「\x1F250ore\x04」. \x1F”", 4);
		SetMemoryBB(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBB(0x57F27C+(228*i)+11,SetTo,0);
		SetMemoryBB(0x57F27C+(228*i)+34,SetTo,1);
		SetDeaths(i,SetTo,0,155);
		PreserveTrigger();
	},
}
end
Trigger { -- 1단계메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 2);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit(2, CurrentPlayer);
		SetResources(CurrentPlayer, Add, 1, Gas);
		PreserveTrigger();
	},
}
Trigger { -- 2단계메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 11);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit(11, CurrentPlayer);
		SetResources(CurrentPlayer, Add, 1, Gas);
		PreserveTrigger();
	},
}



Trigger { -- 일마  > 영마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_live.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_live.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_live.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_live.ogg");
		PreserveTrigger();
	},
}


Trigger{
    players = {Force1},
    conditions = {
        Always();
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

------- 건작 ---------

Trigger { -- 건물데스값 -1
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P6,Subtract,1,131);
		SetDeaths(P6,Subtract,1,132);
		SetDeaths(P6,Subtract,1,133);
		SetDeaths(P6,Subtract,1,148);
		SetDeaths(P6,Subtract,1,151);
		SetDeaths(P6,Subtract,1,127);
		SetDeaths(P6,Subtract,1,111);
		SetDeaths(P6,Subtract,1,113);
		SetDeaths(P6,Subtract,1,114);
		SetDeaths(P6,Subtract,1,174);
		SetDeaths(P6,Subtract,1,175);
		SetDeaths(P6,Subtract,1,168);
		SetDeaths(P6,Subtract,1,160);
		SetDeaths(P6,Subtract,1,167);
		SetDeaths(P6,Subtract,1,154);
		PreserveTrigger()
	}
}

GunLock = CreateVar(P6)
GunLock = CreateVar(P7)
GunLock = CreateVar(P8)

CIf(P6,{NVar(GunLock,Exactly,0)})

square1 = CSMakePolygonX(4,30,0,13,1)
square2 = CSMakePolygonX(4,1,0,13,1)
hexagon1 = CSMakePolygonX(6,80,0,61,0)
hexagon2 = CSMakePolygonX(6,80,0,37,1)


Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat1");
	},
	actions = {
		SetDeaths(P9,Add,1,0);
		PreserveTrigger();
		
	}
}
-- Hat1 hatchery phase 1
CSPlotOrder(square1, P6, 37, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 0, 0)})
CSPlotOrder(square1, P6, 38, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 0, 0)})
CSPlotOrder(square1, P6, 40, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 0, 0)})
CSPlotOrder(square1, P6, 43, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 0, 0)})
CSPlotOrder(square1, P6, 39, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 0, 0)})

-- Hat1 hatchery phase 2
CSPlotOrder(square2, P6, 37, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 330, 0)})
CSPlotOrder(square2, P6, 38, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 330, 0)})
CSPlotOrder(square2, P6, 43, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 330, 0)})
CSPlotOrder(square2, P6, 44, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 330, 0)})
CSPlotOrder(square2, P6, 39, "Hat1", nil, 1, 14, square1, 0, Patrol, "HealZone", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 330, 0)})






CIfEnd()

EndCtrig()
ErrorCheck()
EUDTurbo(FP)
-- 에러 체크 함수 선언 위치 --
--↑Tep에 그대로 붙여넣기-----
