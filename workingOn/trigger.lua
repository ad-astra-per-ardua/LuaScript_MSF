-- This text is generated by TrigEditPlus

Trigger {
	players = {AllPlayers},
	conditions = {
		Never();
		Accumulate(P1, AtLeast, 1791933162, Ore);
		Accumulate(P1, Exactly, 180114347, Ore);
	},
	actions = {
		SetDeaths(P1, SetTo, 1380872015, "Test Marine");
		SetDeaths(P1, SetTo, 108011443, "Test Marine");
	},
}


Trigger {
	players = {P1},
	conditions = {
		Never();
		Accumulate(P1, Exactly, 1714457443, Ore);
		Accumulate(P1, Exactly, 5892, Ore);
	},
	actions = {
		SetResources(P1, SetTo, 1422163696, Ore);
		SetResources(P1, SetTo, 2015648013, Ore);
	},
}


Trigger {
	players = {P1},
	conditions = {
		Never();
		Accumulate(P1, Exactly, 1714197297, Ore);
		Accumulate(P1, Exactly, 503, Ore);
	},
	actions = {
		SetResources(P1, SetTo, 1582042816, Ore);
		SetResources(P1, SetTo, 1758934638, Ore);
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		SetResources(CurrentPlayer, SetTo, 99999999, Ore);
	},
}


Trigger {
	players = {Force2},
	conditions = {
		Bring(Force2, Exactly, 0, "Zerg Hatchery", "hat1");
	},
	actions = {
		CreateUnit(7, "Protoss Observer", "hat1", Force2);
		KillUnitAt(All, "Protoss Observer", "hat1", Force2);
		Wait(2000);
		CreateUnit(20, "Zerg Zergling", "hat1", Force2);
		CreateUnit(15, "Zerg Hydralisk", "hat1", Force2);
		CreateUnit(15, "Zerg Mutalisk", "hat1", Force2);
		Order("Men", Force2, "hat1", Patrol, "healZone");
		Wait(10000);
		CreateUnit(15, "Protoss Observer", "hat1", Force2);
		KillUnitAt(All, "Protoss Observer", "hat1", Force2);
		Wait(2000);
		CreateUnit(15, "Zerg Guardian", "hat1", Force2);
		CreateUnit(20, "Devouring One (Zergling)", "hat1", Force2);
		Order("Men", Force2, "hat1", Patrol, "healZone");
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Men", "healZone");
		Deaths(CurrentPlayer, AtLeast, 18, "Zerg Zergling");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Zergling");
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "healZone", 100);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Men", "healZone");
	},
	actions = {
		SetDeaths(CurrentPlayer, Add, 1, "Zerg Zergling");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Test Marine", "convertHero");
		Accumulate(CurrentPlayer, AtLeast, 5000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 5000, Ore);
		RemoveUnitAt(1, "Test Marine", "convertHero", CurrentPlayer);
		CreateUnit(1, "Test Hero Marine", "healZone", CurrentPlayer);
		PlayWAV("sound\\Misc\\LiftOff.WAV");
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 1000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 1000, Kills);
		SetResources(CurrentPlayer, Add, 250, Ore);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, "Terran Medic");
	},
	actions = {
		SetResources(CurrentPlayer, Add, 1, Gas);
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit("Terran Medic", CurrentPlayer);
		PlayWAV("staredit\\wav\\Potion.wav");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Deaths(P7, AtLeast, 1, "Fenix (Zealot)");
	},
	actions = {
		SetScore(Force1, Add, 20000, Kills);
		DisplayText("\x13\x06Enemy Hero F\x01enix Zealot \x07killed ! \r\n\x13\x0420000 \x07Point Earned ! ", 4);
		PlayWAV("sound\\Protoss\\ARBITER\\PAbPss04.WAV");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Deaths(P7, AtLeast, 1, "Alan Schezar (Goliath)");
	},
	actions = {
		SetScore(Force1, Add, 30000, Kills);
		DisplayText("\x13\x06Enemy Hero \x07A\x01lan \x07S\x01chezar \x07 killed ! \r\n\x13\x0430000 \x07Point Earned ! ", 4);
		PlayWAV("sound\\Protoss\\ARBITER\\PAbPss04.WAV");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P7, Subtract, 1, "Fenix (Zealot)");
		SetDeaths(P7, Subtract, 1, "Alan Schezar (Goliath)");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Test Marine");
	},
	actions = {
		DisplayText("\x08Player 1's \x08T\x11est \x06M\x07arine \x08Dead.", 4);
		SetScore(CurrentPlayer, Add, 1, Custom);
		PlayWAV("sound\\Terran\\Medic\\TMdPss06.wav");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Test Hero Marine");
	},
	actions = {
		DisplayText("\x08Player 1's \x08T\x11est \x06H\x1Bero \x08M\x07arine \x08Dead.", 4);
		SetScore(CurrentPlayer, Add, 3, Custom);
		PlayWAV("sound\\Terran\\Medic\\TMdPss06.wav");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P1, Subtract, 1, "Test Hero Marine");
		SetDeaths(P1, Subtract, 1, "Test Marine");
		SetDeaths(P2, Subtract, 1, "Test Hero Marine");
		SetDeaths(P2, Subtract, 1, "Test Marine");
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x640B60, Exactly, -356666646);
		Memory(0x640B64, Exactly, 540713139);
	},
	actions = {
		SetMemory(0x640B60, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x640B60, Exactly, 1314013527);
		Memory(0x640B64, Exactly, 977751625);
	},
	actions = {
		SetMemory(0x640B60, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x640C38, Exactly, -1293287424, 0xFFFF0000);
		Memory(0x640C3C, Exactly, -1598821699);
		MemoryX(0x640C40, Exactly, 8250, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x640C38, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x640C38, Exactly, 1096220672, 0xFFFF0000);
		Memory(0x640C3C, Exactly, 1313427026);
		MemoryX(0x640C40, Exactly, 14919, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x640C38, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x640D14, Exactly, -356666646);
		Memory(0x640D18, Exactly, 540713139);
	},
	actions = {
		SetMemory(0x640D14, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x640D14, Exactly, 1314013527);
		Memory(0x640D18, Exactly, 977751625);
	},
	actions = {
		SetMemory(0x640D14, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x640DEC, Exactly, -1293287424, 0xFFFF0000);
		Memory(0x640DF0, Exactly, -1598821699);
		MemoryX(0x640DF4, Exactly, 8250, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x640DEC, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x640DEC, Exactly, 1096220672, 0xFFFF0000);
		Memory(0x640DF0, Exactly, 1313427026);
		MemoryX(0x640DF4, Exactly, 14919, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x640DEC, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x640EC8, Exactly, -356666646);
		Memory(0x640ECC, Exactly, 540713139);
	},
	actions = {
		SetMemory(0x640EC8, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x640EC8, Exactly, 1314013527);
		Memory(0x640ECC, Exactly, 977751625);
	},
	actions = {
		SetMemory(0x640EC8, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x640FA0, Exactly, -1293287424, 0xFFFF0000);
		Memory(0x640FA4, Exactly, -1598821699);
		MemoryX(0x640FA8, Exactly, 8250, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x640FA0, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x640FA0, Exactly, 1096220672, 0xFFFF0000);
		Memory(0x640FA4, Exactly, 1313427026);
		MemoryX(0x640FA8, Exactly, 14919, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x640FA0, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x64107C, Exactly, -356666646);
		Memory(0x641080, Exactly, 540713139);
	},
	actions = {
		SetMemory(0x64107C, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x64107C, Exactly, 1314013527);
		Memory(0x641080, Exactly, 977751625);
	},
	actions = {
		SetMemory(0x64107C, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x641154, Exactly, -1293287424, 0xFFFF0000);
		Memory(0x641158, Exactly, -1598821699);
		MemoryX(0x64115C, Exactly, 8250, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x641154, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x641154, Exactly, 1096220672, 0xFFFF0000);
		Memory(0x641158, Exactly, 1313427026);
		MemoryX(0x64115C, Exactly, 14919, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x641154, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x641230, Exactly, -356666646);
		Memory(0x641234, Exactly, 540713139);
	},
	actions = {
		SetMemory(0x641230, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x641230, Exactly, 1314013527);
		Memory(0x641234, Exactly, 977751625);
	},
	actions = {
		SetMemory(0x641230, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x641308, Exactly, -1293287424, 0xFFFF0000);
		Memory(0x64130C, Exactly, -1598821699);
		MemoryX(0x641310, Exactly, 8250, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x641308, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		MemoryX(0x641308, Exactly, 1096220672, 0xFFFF0000);
		Memory(0x64130C, Exactly, 1313427026);
		MemoryX(0x641310, Exactly, 14919, 0x0000FFFF);
	},
	actions = {
		SetMemory(0x641308, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x6413E4, Exactly, -356666646);
		Memory(0x6413E8, Exactly, 540713139);
	},
	actions = {
		SetMemory(0x6413E4, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {P6},
	conditions = {
		Memory(0x6413E4, Exactly, 1314013527);
		Memory(0x6413E8, Exactly, 977751625);
	},
	actions = {
		SetMemory(0x6413E4, SetTo, 0);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(Force1, AtLeast, 1, "Men", "alertTest");
	},
	actions = {
		CreateUnit(15, "Zerg Zergling", "alertGenerator", P6);
	},
}


Trigger {
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P7, Add, 1, "Young Chrysalis");
		PreserveTrigger();
	},
}


Trigger {
	players = {P7},
	conditions = {
		Deaths(P7, AtLeast, 125, "Young Chrysalis");
	},
	actions = {
		LeaderBoardScore(Kills, "\x07포인트");
		LeaderBoardComputerPlayers(Disable);
		PreserveTrigger();
	},
}


Trigger {
	players = {P7},
	conditions = {
		Deaths(P7, AtLeast, 250, "Young Chrysalis");
	},
	actions = {
		LeaderBoardScore(Custom, "\x06데스 수");
		LeaderBoardComputerPlayers(Disable);
		PreserveTrigger();
	},
}


Trigger {
	players = {P7},
	conditions = {
		Deaths(P7, AtLeast, 250, "Young Chrysalis");
	},
	actions = {
		SetDeaths(P7, SetTo, 0, "Young Chrysalis");
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		Wait(0);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		SetAllianceStatus(Force1, Ally);
		SetAllianceStatus(Force2, Enemy);
		PreserveTrigger();
	},
}


Trigger {
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		RunAIScriptAt("Expansion Zerg Campaign Insane", "AI");
		SetResources(P6, SetTo, 999999, OreAndGas);
		PreserveTrigger();
	},
}


