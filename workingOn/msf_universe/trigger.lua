
-- Laptop
-- __MapDirSetting("C:\\Users\\rlatj\\Desktop\\workingarea\\mapping\\MSF_U")
-- __SubDirSetting("C:\\Users\\rlatj\\Desktop\\workingarea\\mapping\\MSF_U")


-- Desktop
__MapDirSetting("C:\\Users\\USER\\Desktop\\mapping\\tesingmap")
__SubDirSetting("C:\\Users\\USER\\Desktop\\mapping\\tesingmap")


-- This text is generated by TrigEditPlus
--↓ Tep에 그대로 붙여넣기----------------------------------------
FP = P6
SetForces({P1,P2,P3,P4},{P5,P6,P7,P8},{},{},{P1,P2,P3,P4,P5,P6,P7,P8}) 
SetFixedPlayer(P6)
-- StartCtrig(1,nil,0,1,"C:\\Users\\rlatj\\Desktop\\workingarea\\mapping\\euddraft0.9.10.12")
StartCtrig(1,nil,0,1,"C:\\Users\\USER\\Desktop\\mapping\\euddraft0.9.10.12")
CJump(AllPlayers,0)
Include_DataTransfer()
Include_CBPaint()
Include_CtrigPlib(360,"Switch 254",1)
Include_64BitLibrary("Switch 255")


CJumpEnd(AllPlayers,0)

Nextptrs = CreateVar(FP)
CanWT = CreateCcode()
CanCT = CreateCcode()
NoAirCollisionX(FP)
DoActions(FP,{SetSpeed(SetTo, "#X2")})
function RotatePlayer(Print,Players,RecoverCP)
	return CopyCpAction(Print,Players,RecoverCP)
end
-- 여기에 변수, 배열 및 Include류 함수 선언 --


function StrDesignX(Str)
	return "\x13\x07。\x18˙\x0F+\x1C˚ "..Str.." \x1C。\x0F+\x18.\x07˚"
end



Trigger{
	players = {P1},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(1, 87, "Location 1", P1);
	}
}



Trigger {
	players = {P8},
	conditions = {
		Memory(0x58F44C,Exactly,1);
	},
	actions = {
		LeaderBoardScore(Kills,"\x1FP\x04oints -- [Ver. Test]");
	},
		flag = {Preserved}
}

Trigger {
	players = {P8},
	conditions = {
		Memory(0x58F44C,Exactly,121);
	},
	actions = {
		LeaderBoardScore(Custom,"\x06D\x04eaths -- [Ver. Test]");
	},
		flag = {Preserved}
}


Trigger { 
	players = {P7},
	conditions = {
		Always()
	},
	actions = {
		KillUnit(84,AllPlayers);
		KillUnit(72,AllPlayers);
		KillUnit(67,AllPlayers);
		KillUnit(94,AllPlayers);
		PreserveTrigger()
	}
}



Trigger {
	players = {P8},
	conditions = {
		Always();
	},
	actions = {
		SetMemory(0x58F44C, Add, 0x00000001);
	},
	flag = {Preserved}
}


Trigger {
	players = {P8},
	conditions = {
		Memory(0x58F44C,AtLeast,360);
	},
	actions = {
		SetMemory(0x58F44C, SetTo, 0x00000000);
	},
	flag = {Preserved}
}


Trigger { -- 
	players = {P8},
	conditions = {
	},
	actions = {
		SetMemory(0x6509A0, SetTo, 0x00000000);
	},
	flag = {Preserved}
}
CanText1 = "\x13\x04\n\x0D\x0D\x13\x04● ● ● \x08ＤＡＮＧＥＲ\x04 ● ● ●\n\x14\n\x14\n"
CanText2 = StrDesignX("\x04맵상의 유닛이 \x08１６００\x04기 이상 있습니다.").."\n"..StrDesignX("\x08캔낫\x04이 \x073회 이상\x04 걸릴 경우 \x10게임\x04에서 \x06패배\x04합니다.\x04\n")
CanText3 = "\x13\x04\n\x0D\x0D\x13\x04● ● ● \x08ＤＡＮＧＥＲ\x04 ● ● ●\n\x14\n\x14\n"


Trigger{
	players = {Force1},
	conditions = {
		Memory(0x6283F0, AtLeast, 1600),
	},
	actions = {
		DisplayText(CanText1, 4);
		DisplayText(CanText2, 4);
		DisplayText(CanText3, 4);
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		Wait(5000);
		PreserveTrigger();
	},
}


Trigger { -- 컴퓨터 리더보드 비활성화
	players = {P6},
	conditions = {
			Always();
		},
	actions = {
			LeaderBoardComputerPlayers(Disable);
		}
}

-------- Exchance Trigger ----------



Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 400);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 400, Kills);
		SetResources(CurrentPlayer, Add, 100, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 1000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 1000, Kills);
		SetResources(CurrentPlayer, Add, 250, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 2000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 2000, Kills);
		SetResources(CurrentPlayer, Add, 500, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 4000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 4000, Kills);
		SetResources(CurrentPlayer, Add, 1000, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 8000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 8000, Kills);
		SetResources(CurrentPlayer, Add, 2000, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 16000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 16000, Kills);
		SetResources(CurrentPlayer, Add, 4000, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 70000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 70000, Kills);
		SetResources(CurrentPlayer, Add, 17500, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 100000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 100000, Kills);
		SetResources(CurrentPlayer, Add, 25000, Ore);
		PreserveTrigger();
	},
}

Trigger { 
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 1000000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 1000000, Kills);
		SetResources(CurrentPlayer, Add, 250000, Ore);
		PreserveTrigger();
	},
}

Trigger { 
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 40000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 40000, Kills);
		SetResources(CurrentPlayer, Add, 10000, Ore);
		PreserveTrigger();
	},
}


Trigger{
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		ModifyUnitShields(All, "Buildings", AllPlayers, "Anywhere", 100);
		ModifyUnitHitPoints(All, "Buildings", AllPlayers, "Anywhere", 100);
	}
}

Trigger { 
	players = {Force2},
	conditions = {
		Always()
	},
	actions = {
		SetDeaths(P9,Add,1,201);
		PreserveTrigger()
	}
}

Trigger { -- 기지유닛 끌당
	players = {Force2},
	conditions = {
		Deaths(P9,Exactly,2000,201);
	},
	actions = {
		Order("Any unit",Force2,"Pulling",Attack,"HealZone");
		SetDeaths(P9,SetTo,0,201);
		PreserveTrigger()
	}
}



Trigger { -- 나간플레이어 유닛삭제
	players = {P8},
	conditions = {
			Always();
		},
	actions = {
			RemoveUnit("Men",P12);
			RemoveUnit(111,P12);
			RemoveUnit(107,P12);
			RemoveUnit(125,P12);
			PreserveTrigger()
		}
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		SetAllianceStatus(Force1,AlliedVictory);
		SetResources(P1, Add, 999999, Ore);
		SetResources(P2, Add, 999999, Ore);
		SetResources(P3, Add, 999999, Ore);
		SetResources(P4, Add, 999999, Ore);
	},
}

Trigger { -- 컴퓨터동맹설정
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		SetResources(P7, SetTo, 9999999, OreAndGas);
		SetResources(P6, SetTo, 9999999, OreAndGas);
		PreserveTrigger();
		SetAllianceStatus(Force2,AlliedVictory);
		SetAllianceStatus(Force1, Enemy);
	},
}

Trigger { 
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript('Turn ON Shared Vision for Player 1');
		RunAIScript('Turn ON Shared Vision for Player 2');
		RunAIScript('Turn ON Shared Vision for Player 3');
		RunAIScript('Turn ON Shared Vision for Player 4');
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript("Turn ON Shared Vision for Player 8");
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript('Turn ON Shared Vision for Player 1');
		RunAIScript('Turn ON Shared Vision for Player 2');
		RunAIScript('Turn ON Shared Vision for Player 3');
		RunAIScript('Turn ON Shared Vision for Player 4');
		PreserveTrigger();
	},
}

Trigger { -- 특건 관련 트리거
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		Wait(100);
		CreateUnit(1, 148, "makeOvermind", P7);
		CreateUnit(1, 127, "makeIoncannon", P7);
		CreateUnit(1, 175, "makeXelnaga", P7);
		CreateUnit(1, 174, "makeTemple", P7);
		CreateUnit(1, 152, "makeDaggoth", P7);
		CreateUnit(1, 200, "makepowergenerator", P7);
		CreateUnit(1, 151, "makecelebrate", P7);
		SetInvincibility(Enable, 148, P7, "Anywhere");
		SetInvincibility(Enable, 127, P7, "Anywhere");
		SetInvincibility(Enable, 175, P7, "Anywhere");

	},
}

Trigger{
	players = {P7},
	conditions = {
		Deaths(P7, AtLeast, 1, 148);
		Deaths(P7, AtLeast, 1, 127);
		Deaths(P7, AtLeast, 1, 175);
		Deaths(P7, AtLeast, 1, 174);
		Deaths(P7, AtLeast, 1, 151);

	},
	actions = {
		CreateUnit(1, 168, "makestasiscell", P7);
	}
}


Trigger{
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(4, 77, "herofenixZ", P7);
		CreateUnit(4, 78, "herofenixD", P7);
		CreateUnit(4, 78, "herofenixD2", P7);
		CreateUnit(4, 52, "herounclean", P7);
		CreateUnit(4, 104, "heroinfestduran", P7);
		CreateUnit(4, 70, "heroscout", P7);
		CreateUnit(4, 21, "herowraith", P7);
		CreateUnit(1, 23, "herotank", P7);
		CreateUnit(2, 23, "herotank2", P7);
		CreateUnit(4, 93, "heromutant", P7);
		CreateUnit(4, 69, "heroMatriach", P7);
		CreateUnit(1, 28, "yamabattle", P7);
		CreateUnit(4, 62, "herodevour", P7);
		CreateUnit(2, 86, "herodanimoth", P7);
		CreateUnit(2, 86, "herodanimoth2", P7);
		CreateUnit(2, 3, "herogoliath", P7);
		CreateUnit(2, 3, "herogoliath2", P7);
		CreateUnit(1, 27, "heronukebattle2", P7);
		CreateUnit(1, 27, "heronukebattle", P7);
		CreateUnit(4, 64, "heroprove", P7);
		CreateUnit(4, 64, "heroprove2", P7);
		CreateUnit(4, 7, "heroscv", P7);
		CreateUnit(4, 60, "herocorsair", P7);
		CreateUnit(4, 60, "herocorsair2", P7);
		CreateUnit(4, 58, "herointercepter", P7);
		CreateUnit(4, 76, "herodarkarchon", P7);
		CreateUnit(4, 75, "heroarchon", P7);
		CreateUnit(2, 74, "heroharddark", P7);
		

	}
}


Trigger { -- 영작유닛 데스값 -1
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(CurrentPlayer, Subtract, 1, 77);
		SetDeaths(CurrentPlayer, Subtract, 1, 78);
		SetDeaths(CurrentPlayer, Subtract, 1, 52);
		SetDeaths(CurrentPlayer, Subtract, 1, 104);
		SetDeaths(CurrentPlayer, Subtract, 1, 70);
		SetDeaths(CurrentPlayer, Subtract, 1, 21);
		SetDeaths(CurrentPlayer, Subtract, 1, 23);
		SetDeaths(CurrentPlayer, Subtract, 1, 93);
		SetDeaths(CurrentPlayer, Subtract, 1, 69);
		SetDeaths(CurrentPlayer, Subtract, 1, 28);
		SetDeaths(CurrentPlayer, Subtract, 1, 62);
		SetDeaths(CurrentPlayer, Subtract, 1, 86);
		SetDeaths(CurrentPlayer, Subtract, 1, 27);
		SetDeaths(CurrentPlayer, Subtract, 1, 64);
		SetDeaths(CurrentPlayer, Subtract, 1, 7);
		SetDeaths(CurrentPlayer, Subtract, 1, 3);
		SetDeaths(CurrentPlayer, Subtract, 1, 60);
		SetDeaths(CurrentPlayer, Subtract, 1, 58);
		SetDeaths(CurrentPlayer, Subtract, 1, 76);
		SetDeaths(CurrentPlayer, Subtract, 1, 75);
		SetDeaths(CurrentPlayer, Subtract, 1, 74);

		PreserveTrigger();
	},
}


Trigger{
	players = {force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 150);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Gift \x03box \x11ﾟ.+｡ \x04를 열어 \x1970000 \x1FPoint\x04를 획득했습니다 !", 4);
		SetScore(CurrentPlayer, Add, 70000, Kills);
		PlayWAV("staredit\\wav\\hey.ogg");
		PlayWAV("staredit\\wav\\hey.ogg");
		PlayWAV("staredit\\wav\\hey.ogg");
		PlayWAV("staredit\\wav\\hey.ogg");
		PlayWAV("staredit\\wav\\hey.ogg");
		PlayWAV("staredit\\wav\\hey.ogg");
		PreserveTrigger();
	}
}

Trigger{
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P6, Subtract, 1, 150);
		PreserveTrigger();
	}
}

Trigger { -- fenix z
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 77);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Didymos \x11ﾟ.+｡ \x01을 \x06처치 \x04하였습니다 + 35000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 35000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- fenix d
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 78);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Dimorphos \x11ﾟ.+｡ \x01을 \x06처치 \x04하였습니다 + 40000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 40000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- unclean
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 52);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Biela’s Comet \x11ﾟ.+｡ \x01을 \x06처치 \x04하였습니다 + 45000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 45000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- inf duran
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 104);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Psyche \x11.+ﾟ｡ \x01을 \x06처치 \x04하였습니다 + 45000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 45000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- scout
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 70);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Restriction \x11.+ﾟ｡ \x01을 \x06처치 \x04하였습니다 + 50000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 50000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- No comment (ABB625F6)
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 21);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Aphophis \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 55000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 55000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- tank
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 23);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Comet Hyakutake \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 100000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- scantid
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 93);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03'Oumuamua \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 45000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 45000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- matriach
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 69);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Vesta \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 50000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 50000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- yamabattle
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 28);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Cassini \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 130000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 130000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- devour H
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 62);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Bennu \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 65000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 65000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- Danimoth
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 86);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Borisov \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 85000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 85000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- Goliath
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 3);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Perseid meteor \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 75000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 75000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- Nuke battle
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 27);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Tempel 1 \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 200000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 200000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- Prove
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 64);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Halley’s Comet \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 70000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 70000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- SCV
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 7);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Pluto \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 75000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 75000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger{ -- Corsair
	players = {force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 60);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Ikeya-Seki \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 90000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 90000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	}
}

Trigger{ -- Intercepter
	players = {force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 58);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Intercepter \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 80000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 80000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	}
}

Trigger{ -- DA
	players = {force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 76);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Purity \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 85000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 85000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	}
}

Trigger{ -- ZE
	players = {force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 75);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Veil \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 100000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	}
}

Trigger{ -- HD
	players = {force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 74);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Parallel's \x03Unrevealer \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 150000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 150000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	}
}





Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer,Exactly,0,158);
		Bring(CurrentPlayer,AtLeast,1,12,"mainLocation")
	},
	actions = {
		RemoveUnitAt(1,12,"mainLocation",CurrentPlayer);
		DisplayText("브금ㄴㄴ");
		SetDeaths(CurrentPlayer,SetTo,1,158);
		PreserveTrigger()
	},
}

Trigger { -- off
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer,Exactly,1,158);
		Bring(CurrentPlayer,AtLeast,1,12,"mainLocation")
	},
	actions = {
		RemoveUnitAt(1,12,"mainLocation",CurrentPlayer);
		DisplayText("브금ㅇㅇ");
		SetDeaths(CurrentPlayer,SetTo,0,158);
		PreserveTrigger()
	},
}

------ 건작 브금 ------


Trigger { -- 경우 1 
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Zerg Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Independent Starport");
		Deaths(CurrentPlayer, Exactly, 0, 220);
		Deaths(CurrentPlayer, Exactly, 0, 221);
		Deaths(CurrentPlayer, Exactly, 0, 218);
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1666, "Zerg Flag Beacon");
		PlayWAV("staredit\\wav\\hat.ogg");
		PlayWAV("staredit\\wav\\hat.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Zerg Flag Beacon");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Zerg Beacon");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Beacon");
		PreserveTrigger();
	},
}

Trigger { -- 경우 2
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Unused Zerg Bldg 5");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Independent Starport");
		Deaths(CurrentPlayer, Exactly, 0, 220);
		Deaths(CurrentPlayer, Exactly, 0, 221);
		Deaths(CurrentPlayer, Exactly, 0, 218);
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 966, "Unused Zerg Bldg");
		PlayWAV("staredit\\wav\\Lair.ogg");
		PlayWAV("staredit\\wav\\Lair.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Zerg Bldg");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Unused Zerg Bldg 5");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Unused Zerg Bldg 5");
		PreserveTrigger();
	},
}

Trigger { -- 경우 3
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Unused Terran Bldg type   1");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Independent Starport");
		Deaths(CurrentPlayer, Exactly, 0, 220);
		Deaths(CurrentPlayer, Exactly, 0, 221);
		Deaths(CurrentPlayer, Exactly, 0, 218);
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1054, "Unused Terran Bldg type   2");
		PlayWAV("staredit\\wav\\hive.ogg");
		PlayWAV("staredit\\wav\\hive.ogg");
		PlayWAV("staredit\\wav\\hive.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Terran Bldg type   2");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Unused Terran Bldg type   1");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Unused Terran Bldg type   1");
		PreserveTrigger();
	},
}

Trigger { -- 경우 4
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   1");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 1, "Independent Starport");
		Deaths(CurrentPlayer, Exactly, 0, 220);
		Deaths(CurrentPlayer, Exactly, 0, 221);
		Deaths(CurrentPlayer, Exactly, 0, 218);
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1190, "Unused Zerg Bldg");
		PlayWAV("staredit\\wav\\terran1.ogg");
		PlayWAV("staredit\\wav\\terran1.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Zerg Bldg");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Independent Starport");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Independent Starport");
		PreserveTrigger();
	},
}

Trigger { -- 경우 5
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   1");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Independent Starport");
		Deaths(CurrentPlayer, Exactly, 0, 220);
		Deaths(CurrentPlayer, Exactly, 0, 221);
		Deaths(CurrentPlayer, Exactly, 1, 218);
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 2074, 221);
		PlayWAV("staredit\\wav\\stargate.ogg");
		PlayWAV("staredit\\wav\\stargate.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, 221);
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, 218);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, 218);
		PreserveTrigger();
	},
}

Trigger { -- Link with variation with trigger
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 131);
	},
	actions = {
		DisplayText("Hatchery Destroyed! + 40000 Points");
		SetScore(CurrentPlayer, Add, 40000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, "Zerg Beacon");
		PreserveTrigger();
	},
}

Trigger { -- Link with variation with trigger
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 132);
	},
	actions = {
		DisplayText("Lair Destroyed! + 50000 Points");
		SetScore(CurrentPlayer, Add, 50000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, "Unused Zerg Bldg 5");
		PreserveTrigger();
	},
}

Trigger { -- Link with variation with trigger
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 133);
	},
	actions = {
		DisplayText("Hive Destroyed! + 60000 Points");
		SetScore(CurrentPlayer, Add, 60000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, "Unused Terran Bldg type   1");
		PreserveTrigger();
	},
}

Trigger { -- Link with variation with trigger
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 114);
	},
	actions = {
		DisplayText("Starport Destroyed! + 80000 Points");
		SetScore(CurrentPlayer, Add, 80000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, "Independent Starport");
		PreserveTrigger();
	},
}

-- Trigger{
-- 	players = {Force1},
-- 	conditions = {
-- 		Deaths(P6, AtLeast, 1, 113)
-- 	},
-- 	actions = {
-- 		DisplayText("Factory Destroyed! + 85000 Points");
-- 		SetScore(CurrentPlayer, Add, 85000, Kills);
-- 		SetDeaths(CurrentPlayer, SetTo, 1, 218);
-- 		PreserveTrigger()
-- 	}
-- }

Trigger{
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 167);
	},
	actions = {
		DisplayText("Stargate Destroyed! + 100000 Points");
		SetScore(CurrentPlayer, Add, 100000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, 218);
		PreserveTrigger();
	},
}





function SetMemoryBA(Offset,Type,Value)
	local ret = bit32.band(Offset, 0xFFFFFFFF)%4
	if ret == 0 then
		Mask = 0xFF
	elseif ret == 1 then
		Mask = 0xFF00
		Value = Value * 0x100
	elseif ret == 2 then
		Mask = 0xFF0000
		Value = Value * 0x10000
	elseif ret == 3 then
		Mask = 0xFF000000
		Value = Value * 0x1000000
	end
	return SetMemoryX(Offset-ret,Type,Value,Mask)
end
for i=0, 3 do -- 예약메딕

Trigger { -- 
	players = {i},
	conditions = {
		Always()
	},
	actions = {
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,1);
	},
}

Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,0,"Map Revealer");
		Bring(i,AtLeast,1,17,"Anywhere");
	},
	actions = {
		RemoveUnit(17,i);
		DisplayText("2Tic 예약메딕 사용 200 Ore.");
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,1);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,0);
		SetDeaths(i,SetTo,1,"Map Revealer");
		PreserveTrigger();
	},
}

Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,1,"Map Revealer");
		Bring(i,AtLeast,1,17,"Anywhere");
	},
	actions = {
		RemoveUnit(17,i);
		DisplayText("예약메딕 사용안함 150 Ore.");
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,1);
		SetDeaths(i,SetTo,0,"Map Revealer");
		PreserveTrigger();
	},
}

end
Trigger { -- 1틱메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, "Terran Medic");
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitShields(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit("Terran Medic", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 2틱메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 2);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitShields(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit(2, CurrentPlayer);
		PreserveTrigger();
	},
}


Trigger { -- 일마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		CreateUnit(1, 0, "Location 1", CurrentPlayer);
		RemoveUnitAt(1, 0, "mainLocation", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 영마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		RemoveUnitAt(1, 20, "mainLocation", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 스마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 1, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_nevergiveup.ogg");
		RemoveUnitAt(1, 1, "mainLocation", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}

----------- Heal Zone -----------

Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 100, "Young Chrysalis");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Young Chrysalis");
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "HealZone", 100);
        ModifyUnitShields(All, "Men", CurrentPlayer, "HealZone", 100);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Any unit", "HealZone");
	},
	actions = {
		SetDeaths(CurrentPlayer, Add, 1, "Young Chrysalis");
		PreserveTrigger();
	},
}

------------ Bunker Heal Zone ----------
Trigger{
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 125, "bunkerHeal");
		},
	actions = {
		SetDeaths(P8, Add, 1, 176);
		PreserveTrigger();
	},
}


Trigger{
	players = {Force1},
	conditions = {
		Deaths(P8, AtLeast, 1, 176);
	},
	actions = {
		SetDeaths(P8, SetTo, 0, 176);
		ModifyUnitHitPoints(All, 125, CurrentPlayer, "bunkerHeal", 100);
		ModifyUnitShields(All, 125, CurrentPlayer, "bunkerHeal", 100);
		PreserveTrigger();
	},
}

------<  기부 트리거  >--------------------------------------------- [ GiveRateUnit = 8  ]
GText1 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F5,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText2 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F10,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText3 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F50,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText4 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F100,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText5 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F500,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText6 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F1,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
-- 1000 = 0 // 5000 = 1 // 10000 = 2 // 50000 = 3 // 100000 = 4 // 500000 = 5
GTable = {{0,1,GText1},{1,2,GText2},{2,3,GText3},{3,4,GText4},{4,5,GText5},{5,0,GText6}}
--Give Trig -- [ GiveUnit (58,60,69,71,72) ]
--GiveRate 0~5 [ 5000, 10000, 50000, 100000, 500000, 1000 ]

GiveRate = CreateNcode()

GiveRate2 = {1000,5000,10000,50000,100000,500000}
GiveUnitID = {58,60,69,71,72}
PlayerArr = {"\x08P1","\x0EP2","\x0FP3","\x10P4","\x11P5"}

CIf(Force1,{Bring(CurrentPlayer,AtLeast,1,11,"Anywhere")})

for i = 0, 3 do
for j = 1, 6 do
Trigger {
	players = {i},
	conditions = {
			Label(0);
			NDeaths(i,Exactly,GTable[j][1],GiveRate);
			Bring(CurrentPlayer,AtLeast,1,11,"Anywhere")
		},
	actions = {
			GiveUnits(all,11,i,"Anywhere",P12);
			ModifyUnitEnergy(all, 11, P12, "Anywhere", 0);
			RemoveUnit(11,P12);
			DisplayText(GTable[j][3],4);
			SetNDeaths(i,SetTo,GTable[j][2],GiveRate);
			PreserveTrigger();
		}
}

end end

CIfEnd()

for k = 0, 3 do
for j = 0, 3 do
if k~=j then
CIf(k,Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere"))
	for i = 0, 5 do
	Trigger {
			players = {k},
			conditions = {
					Label(0);
					Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere");
					PlayerCheck(j,1);
					NDeaths(k,Exactly,i,GiveRate);
					Accumulate(k,AtMost,GiveRate2[i+1],Ore);
				},
			actions = {
					ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
					RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
					DisplayText("\x1F─━┫ “ \x1F잔액\x04이 부족합니다.\x0F”",4);
					PreserveTrigger()
				},
		}
	Trigger {
			players = {k},
			conditions = {
					Label(0);
					Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere");
					PlayerCheck(j,1);
					NDeaths(k,Exactly,i,GiveRate);
					Accumulate(k,AtLeast,GiveRate2[i+1],Ore);
					Accumulate(k,AtMost,0x7FFFFFFF,Ore);
				},
			actions = {
					SetResources(k,Subtract,GiveRate2[i+1],Ore);
					SetResources(j,Add,GiveRate2[i+1],Ore);
					ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
					RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
					DisplayText("\x1F─━┫ “ "..PlayerArr[j+1].."\x04에게 \x1F"..GiveRate2[i+1].." Ore\x04를 기부하였습니다. \x0F”",4);
					SetMemory(0x6509B0,SetTo,j);
					DisplayText("\x1F─━┫ “ "..PlayerArr[k+1].."\x04에게 \x1F"..GiveRate2[i+1].." Ore\x04를 기부받았습니다. \x0F”",4);
					SetMemory(0x6509B0,SetTo,k);
					PreserveTrigger();
				},
		}
	end
Trigger {
	players = {k},
	conditions = {
			Label(0);
			Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere");
			PlayerCheck(j,0);
		},
	actions = {
			DisplayText("\x1F─━┫ “"..PlayerArr[j+1].."\x04이(가) 존재하지 않습니다. \x0F”",4);
			ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
			RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
			PreserveTrigger();
				},
		}
	
CIfEnd()
elseif k==j then
	TriggerX(k,{Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere")},{
		ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
		RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
	},{Preserved})
end end end

--------------------- Ban Trigger ------------------------

BanText = "\x13\x1F─━┫【 \x04당신은 \x11방장에 의해 \x08강제퇴장 \x04당하였습니다.  \x1F】┣━─"
BanLocArr = {"banP1","banP2","banP3","banP4"}
for i = 0, 3 do
Trigger {
	players = {FP},
	conditions = {
			Label(0);
			Bring(Force1,AtLeast,1,15,BanLocArr[i+1]);
		},
	actions = {
			RotatePlayer({DisplayTextX(BanText)},{i},FP);
			RotatePlayer({Defeat()},{i},FP);
		}
}
end



Trigger { -- 일마  > 영마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_nevergiveup.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger{
	players = {Force1},
	conditions = {
		Deaths(P7, Exactly, 1, 152);
		Deaths(P9,Exactly,0,200);
	},
	actions = {
		DisplayText("\x13\x19｡˙+ﾟ\x11Special \x1fGuardians of \x19Galaxy\x19 ｡+ﾟ. 가 전장에 합류했습니다 !", 4);
		PlayWAV("staredit\\wav\\unlock.ogg");
		PlayWAV("staredit\\wav\\unlock.ogg");
		PlayWAV("staredit\\wav\\unlock.ogg");
	}
}



Trigger{ -- 해금
    players = {P1},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P2},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock2", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P3},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock3", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P4},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock4", CurrentPlayer);
    }
}


Trigger { -- No comment (866B4FC4)
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		RunAIScriptAt("Expansion Zerg Campaign Insane", "Hive3");
		RunAIScriptAt("Value This Area Higher", "bunkerHeal");
	},
}

SDspeed = 1000 // 29


-------------------------- Wave Trigger ------------------------------

WAVE1 = CSMakePolygon(4,50,0,25,5)
WAVE2 = CSMakePolygon(4,50,0,13,5)
WAVE3 = CSMakePolygon(4,50,45,9,5)

----------- 30 sec period --------

Trigger{
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P8, Add, 1, 131);
		PreserveTrigger();
	}
}

Trigger2(P6, {Deaths(P8, Exactly, 1021, 131)}, SetDeaths(P8, SetTo, 0, 131),{preserved})


CSPlotOrder(WAVE1, P5, 40, "smallWave", nil, 1, 32, WAVE1, 0, Patrol, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, 1020, 131)},nil,1)
CSPlotOrder(WAVE2, P5, 44, "smallWave", nil, 1, 32, WAVE2, 0, Patrol, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, 1020, 131)},nil,1)
CSPlotOrder(WAVE3, P5, 51, "smallWave", nil, 1, 32, WAVE3, 0, Patrol, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, 1020, 131)},nil,1)


------------------ Big Wave Trigger 132 -----------------
bigwave = {}
Bigwave1 = CSMakePolygon(6,80,0,91,1)
Bigwave2 = CSMakeLine(6,180,0,13,0)

Trigger{
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P8, Add, 1, 132);
		PreserveTrigger()
	}
}

Gentime = SDspeed * 251

for i = 1 , 10 do
	Trigger2(Force1, Deaths(P8, Exactly, Gentime * i, 132), {PlayWAV("staredit\\wav\\bigwave.ogg"),PlayWAV("staredit\\wav\\bigwave.ogg"),PlayWAV("staredit\\wav\\bigwave.ogg"),MinimapPing("celebrate1")})
	CSPlotOrder(Bigwave1, P5, 54, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 53, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 55, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 56, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i, 132)},nil,1)
	CSPlotOrder(Bigwave2, P5, 62, "celebrate1", nil, 1, 32, CSMakeLine(6,1,0,13,0), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i, 132)},nil,1)
end

for i = 10, 15 do
	Trigger2(Force1, Deaths(P8, Exactly, Gentime * i + 120, 132), {PlayWAV("staredit\\wav\\bigwave.ogg"),PlayWAV("staredit\\wav\\bigwave.ogg"),PlayWAV("staredit\\wav\\bigwave.ogg"),MinimapPing("celebrate1")})
	CSPlotOrder(Bigwave1, P5, 65, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 120, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 66, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 120, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 51, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 120, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 88, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 120, 132)},nil,1)
	CSPlotOrder(Bigwave2, P5, 70, "celebrate1", nil, 1, 32, CSMakeLine(6,1,0,13,0), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 120, 132)},nil,1)
end

for i = 16, 20 do
	Trigger2(Force1, Deaths(P8, Exactly, Gentime * i + 180, 132), {PlayWAV("staredit\\wav\\bigwave.ogg"),PlayWAV("staredit\\wav\\bigwave.ogg"),PlayWAV("staredit\\wav\\bigwave.ogg"),MinimapPing("celebrate1")})
	CSPlotOrder(Bigwave1, P5, 77, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 180, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 78, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 180, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 104, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 180, 132)},nil,1)
	CSPlotOrder(Bigwave1, P5, 88, "celebrate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 180, 132)},nil,1)
	CSPlotOrder(Bigwave2, P5, 64, "celebrate1", nil, 1, 32, CSMakeLine(6,1,0,13,0), 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, Gentime * i + 180, 132)},nil,1)
end


----todo : 1min : 16320 , using for function for big wave

--------- 잡건 ----------
local Gspire = {"etcGratespire","etcGratespire1","etcGratespire2","etcGratespire3","etcGratespire4","etcGratespire5","etcGratespire6","etcGratespire7"}
local Spire = {"etcSpire","etcSpire1","etcSpire2","etcSpire3","etcSpire4"}
local Ucavern = {"etcUltrarisk","etcUltrarisk1","etcUltrarisk2","etcUltrarisk3"}
local Dmound = {"etcDefiler","etcDefiler1","etcDefiler2","etcDefiler3","etcDefiler4","etcDefiler5","etcDefiler6"}
local Academy = {"etcAcademy","etcAcademy1","etcAcademy2","etcAcademy3","etcAcademy4","etcAcademy5","etcAcademy6"}
local Armory = {"etcArmory","etcArmory1","etcArmory2"}
local Arbiter = {"etcArbiter","etcArbiter1","etcArbiter1"}
local Reaver = {"etcReaver2","etcReaver3","etcReaver4"}
local MachineShop = {"machineshop","machineshop1"}
local Physics = {"etcPhysics","etcPhysics1"}

for i = 1, #Physics do
	Trigger2(P7, {Bring(P7, Exactly, 0, 120, MachineShop[i])}, {
		CreateUnit(9, 19, Armory[i], P6),
		CreateUnit(1, 21, Armory[i], P6),
		CreateUnit(6, 12, Armory[i], P6),
		Order("Any unit", P6, MachineShop[i], Attack, "bunkerHeal"),
	})
end


for i = 1, #MachineShop do
	Trigger2(P7, {Bring(P7, Exactly, 0, 120, MachineShop[i])}, {
		CreateUnit(9, 19, Armory[i], P6),
		CreateUnit(1, 21, Armory[i], P6),
		CreateUnit(6, 12, Armory[i], P6),
		Order("Any unit", P6, MachineShop[i], Attack, "bunkerHeal"),
	})
end


for i = 1, #Reaver do
	Trigger2(P7, {Bring(P7, Exactly, 0, 171, Reaver[i])}, {CreateUnit(6, 81, Reaver[i], P6), CreateUnit(1, 70, Reaver[i], P6),CreateUnit(1, 86, Reaver[i], P6),Order("Any unit", P6, Reaver[i], Attack, "bunkerHeal")})
end


for i = 1, #Arbiter do
	Trigger2(P7, {Bring(P7 , Exactly, 0, 123, Armory[i])}, {
	CreateUnit(9, 88, Armory[i], P6),
	CreateUnit(1, 86, Armory[i], P6),
	CreateUnit(3, 58, Armory[i], P6),
	CreateUnit(3, 60, Armory[i], P6),
	Order("Any unit", P6, Armory[i], Attack, "bunkerHeal"),
	})
end


for i = 1, #Armory do
	Trigger2(P7, {Bring(P7 , Exactly, 0, 123, Armory[i])}, {
	CreateUnit(9, 25, Armory[i], P6),
	CreateUnit(1, 3, Armory[i], P6),
	CreateUnit(8, 17, Armory[i], P6),
	Order("Any unit", P6, Armory[i], Attack, "bunkerHeal"),
	})
end


for i = 1, #Academy do
	Trigger2(P7, {Bring(P7 , Exactly, 0, 112, Academy[i])}, {
	CreateUnit(9, 16, Academy[i], P6),
	CreateUnit(1, 104, Academy[i], P6),
	CreateUnit(8, 95, Academy[i], P6),
	Order("Any unit", P6, Academy[i], Attack, "bunkerHeal"),
	})
end


for i = 1, #Gspire do
Trigger{
	players = {P7},
	conditions = {
		Bring(P7, Exactly, 0, 137, Gspire[i]);
	},
	actions = {
		CreateUnit(9, 44, Gspire[i], P6);
		CreateUnit(1, 62, Gspire[i], P6);
		CreateUnit(8, 51, Gspire[i], P6);
		Order("Any unit", P6, Gspire[i], Attack, "bunkerHeal");
	}
}
end

for i = 1, #Spire do
Trigger{
	players = {P7},
	conditions = {
		Bring(P7, Exactly, 0, 141, Spire[i]);
	},
	actions = {
		CreateUnit(9, 44, Spire[i], P6);
		CreateUnit(1, 62, Spire[i], P6);
		CreateUnit(8, 51, Spire[i], P6);
		Order("Any unit", P6, Spire[i], Attack, "bunkerHeal");
	}
}
end

for i = 1, #Ucavern do
Trigger{
	players = {P7},
	conditions = {
		Bring(P7, Exactly, 0, 140, Ucavern[i]);
	},
	actions = {
		CreateUnit(9, 39, Ucavern[i], P6);
		CreateUnit(1, 93, Ucavern[i], P6);
		CreateUnit(8, 51, Ucavern[i], P6);
		Order("Any unit", P6, Ucavern[i], Attack, "bunkerHeal");
	}
}
end

for i = 1, #Dmound do
Trigger{
	players = {P7},
	conditions = {
		Bring(P7, Exactly, 0, 136, Dmound[i]);
	},
	actions = {
		CreateUnit(9, 46, Dmound[i], P6);
		CreateUnit(1, 52, Dmound[i], P6);
		CreateUnit(8, 51, Dmound[i], P6);
		Order("Any unit", P6, Dmound[i], Attack, "bunkerHeal");
	}
}
end



------- 건작 ---------



Trigger { -- 건물데스값 -1
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P6,Subtract,1,131);
		SetDeaths(P6,Subtract,1,132);
		SetDeaths(P6,Subtract,1,133);
		SetDeaths(P6,Subtract,1,111);
		SetDeaths(P6,Subtract,1,113);
		SetDeaths(P6,Subtract,1,114);
		SetDeaths(P6,Subtract,1,160);
		SetDeaths(P6,Subtract,1,167);
		SetDeaths(P6,Subtract,1,154);
		PreserveTrigger()
	}
}

GunLock = CreateVar(P6)
GunLock = CreateVar(P7)
GunLock = CreateVar(P8)

CIf(P6,{NVar(GunLock,Exactly,0)})
square1 = CSMakePolygonX(4,80,0,36,0)
square2 = CSMakePolygonX(4,70,45,36,0)

Shape5 = CSMakePolygon(6,80,0,91,1)
Shape4 = CSMakePolygon(6,80,0,61,1)
Shape3 = CSMakePolygon(6,80,0,37,1)
Shape2 = CSMakePolygon(6,80,0,19,1)
Shape1 = CSMakePolygon(6,80,0,7,0)

sixline = CSMakeCircleX(6,64,30,54,0)
spiral1 = CSMakeSpiral(4, 16, 1/1.2, 40, 0, 37, 5)
spiral2 = CSMakeSpiral(4, 16, 1/1.2, 40, 45, 37, 5)


CX2 = CSMakeCircleX(6,80,30,30,0)

--- SDspeed * pharse timeline ----- 

Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat1");
	},
	actions = {
		SetDeaths(P10,Add,1,0);
		PreserveTrigger();
	}
}
-- Hat1 hatchery phase 1
CSPlotOrder(square1, P6, 54, "Hat1", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 50,0)})
CSPlotOrder(square1, P7, 53, "Hat1", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 85, 0)})
CSPlotOrder(square1, P6, 40, "Hat1", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 115, 0)})
CSPlotOrder(spiral1, P6, 43, "Hat1", nil, 1, 10, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 180, 0)})
CSPlotOrder(square1, P7, 39, "Hat1", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 145, 0)})

CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 275, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 345, 0)})
CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 415, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 485, 0)})

-- -- Hat1 hatchery phase 2
CSPlotOrder(square2, P7, 54, "Hat1", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 578, 0)})
CSPlotOrder(square2, P6, 53, "Hat1", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 613, 0)})
CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 640, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 691, 0)})
CSPlotOrder(square2, P6, 39, "Hat1", nil, 1, 20, square2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P10, AtLeast, 691, 0)})

Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat2");
	},
	actions = {
		SetDeaths(P10,Add,1,4);
		PreserveTrigger();
	}
}

CSPlotOrder(square1, P6, 54, "Hat2", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 50,4)})
CSPlotOrder(square1, P7, 53, "Hat2", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 85, 4)})
CSPlotOrder(square1, P6, 40, "Hat2", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 115, 4)})
CSPlotOrder(spiral1, P6, 43, "Hat2", nil, 1, 10, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 180, 4)})
CSPlotOrder(square1, P7, 39, "Hat2", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 145, 4)})

CSPlotOrder(spiral1, P7, 43, "Hat2", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 275, 4)})
CSPlotOrder(spiral2, P6, 44, "Hat2", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 345, 4)})
CSPlotOrder(spiral1, P7, 43, "Hat2", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 415, 4)})
CSPlotOrder(spiral2, P6, 44, "Hat2", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 485, 4)})

-- -- Hat2 hatchery phase 2
CSPlotOrder(square2, P7, 54, "Hat2", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 578, 4)})
CSPlotOrder(square2, P6, 53, "Hat2", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 613, 4)})
CSPlotOrder(spiral1, P7, 43, "Hat2", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 640, 4)})
CSPlotOrder(spiral2, P6, 44, "Hat2", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 691, 4)})
CSPlotOrder(square2, P6, 39, "Hat2", nil, 1, 20, square2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat2"), Deaths(P10, AtLeast, 691, 4)})


Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat3");
	},
	actions = {
		SetDeaths(P10,Add,1,5);
		PreserveTrigger();
	}
}

CSPlotOrder(square1, P6, 54, "Hat3", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 50,5)})
CSPlotOrder(square1, P7, 53, "Hat3", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 85, 5)})
CSPlotOrder(square1, P6, 40, "Hat3", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 115, 5)})
CSPlotOrder(spiral1, P6, 43, "Hat3", nil, 1, 10, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 180, 5)})
CSPlotOrder(square1, P7, 39, "Hat3", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 145, 5)})

CSPlotOrder(spiral1, P7, 43, "Hat3", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 275, 5)})
CSPlotOrder(spiral2, P6, 44, "Hat3", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 345, 5)})
CSPlotOrder(spiral1, P7, 43, "Hat3", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 415, 5)})
CSPlotOrder(spiral2, P6, 44, "Hat3", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 485, 5)})

-- -- Hat3 hatchery phase 2
CSPlotOrder(square2, P7, 54, "Hat3", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 578, 5)})
CSPlotOrder(square2, P6, 53, "Hat3", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 613, 5)})
CSPlotOrder(spiral1, P7, 43, "Hat3", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 640, 5)})
CSPlotOrder(spiral2, P6, 44, "Hat3", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 691, 5)})
CSPlotOrder(square2, P6, 39, "Hat3", nil, 1, 20, square2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat3"), Deaths(P10, AtLeast, 691, 5)})


Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat4");
	},
	actions = {
		SetDeaths(P10,Add,1,13);
		PreserveTrigger();
	}
}

CSPlotOrder(square1, P6, 54, "Hat4", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 50,13)})
CSPlotOrder(square1, P7, 53, "Hat4", nil, 1, 16, square1, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 85, 13)})
CSPlotOrder(square1, P6, 40, "Hat4", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 115, 13)})
CSPlotOrder(spiral1, P6, 43, "Hat4", nil, 1, 10, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 180, 13)})
CSPlotOrder(square1, P7, 39, "Hat4", nil, 1, 16, square1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 145, 13)})

CSPlotOrder(spiral1, P7, 43, "Hat4", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 275, 13)})
CSPlotOrder(spiral2, P6, 44, "Hat4", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 345, 13)})
CSPlotOrder(spiral1, P7, 43, "Hat4", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 415, 13)})
CSPlotOrder(spiral2, P6, 44, "Hat4", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 485, 13)})

-- -- Hat4 hatchery phase 2
CSPlotOrder(square2, P7, 54, "Hat4", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 578, 13)})
CSPlotOrder(square2, P6, 53, "Hat4", nil, 1, 20, square2, 0, Attack, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 613, 13)})
CSPlotOrder(spiral1, P7, 43, "Hat4", nil, 1, 12, spiral1, 0, Patrol, "bunkerHeal", nil, 0, nil, P7,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 640, 13)})
CSPlotOrder(spiral2, P6, 44, "Hat4", nil, 1, 12, spiral2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 691, 13)})
CSPlotOrder(square2, P6, 39, "Hat4", nil, 1, 20, square2, 0, Patrol, "bunkerHeal", nil, 0, nil, P6,{CommandLeastAt(131, "Hat4"), Deaths(P10, AtLeast, 691, 13)})


--- Lair -----
LairTimeline = {3.0, 5.7, 8.5, 14.1, 14.6, 15.3, 15.7, 16, 17, 19.7, 21.6, 22, 22.3, 22.5, }
--- SDspeed * pharse timeline ----- 
---  14 ~ 16  , 21.6 ~ 22.3 = Effect ---

TempProperties = {
clocked = false,
burrowed = false,
intransit = false,
hallucinated = false,
invincible = false,
hitpoint = 30,
shield = 50,
energy = 0,
resource = 0,
hanger = 0,}

LSU = CSMakeLineX(6,64,0,30,0)
LSU2 = CSMakeLineX(6,64,10,30,0)
LSU3 = CSMakeLineX(6,64,20,30,0)
LSU4 = CSMakeLineX(6,64,30,30,0)
LSU5 = CSMakeLineX(6,64,40,30,0)

LGU1 = CSMakePolygonX(6,64,30,6,0)
LGU2 = CSMakePolygonX(6,64,30,24,6)
LGU3 = CSMakePolygonX(6,64,30,54,24)
LGU4 = CSMakePolygonX(6,64,30,96,54)

LGU1a = CSMakePolygonX(6,1,30,6,0)
LGU2a = CSMakePolygonX(6,1,30,24,6)
LGU3a = CSMakePolygonX(6,1,30,54,24)

Eft1 = CSMakeLineX(6,64,10,24,0)
Eft2 = CSMakeLineX(6,64,20,24,0)
Eft3 = CSMakeLineX(6,64,30,24,0)
Eftstar = CSMakeStarX(5,108,64,36,90,0)


Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(132, "Lair1");
	},
	actions = {
		SetDeaths(P10,Add,1,6);
		PreserveTrigger();
	}
}
---- 1젠 ----
CSPlotOrder(LGU1, P6, 39, "Lair1", nil, 1, 20, LGU1a, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,6)})
CSPlotOrder(LGU2, P6, 51, "Lair1", nil, 1, 20, LGU2a, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,6)})
CSPlotOrder(LGU3, P6, 46, "Lair1", nil, 1, 20, LGU3a, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,6)})
CSPlotOrder(LSU, P6, 43, "Lair1", nil, 1, 20, LSU, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,6)})
CSPlotOrder(LSU2, P6, 44, "Lair1", nil, 1, 20, LSU2, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,6)})

---2젠
CSPlotOrder(LGU1, P6, 39, "Lair1", nil, 1, 20, LGU1, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,6)})
CSPlotOrder(LGU2, P7, 51, "Lair1", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,6)})
CSPlotOrder(LGU3, P6, 46, "Lair1", nil, 1, 20, LGU3, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,6)})
CSPlotOrder(LSU, P7, 43, "Lair1", nil, 1, 20, LSU, 0, Patrol , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,6)})
CSPlotOrder(LSU2, P6, 44, "Lair1", nil, 1, 20, LSU2, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,6)})
--- 3젠
CSPlotOrder(LGU1, P7, 16, "Lair1", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,6)})
CSPlotOrder(LGU2, P6, 51, "Lair1", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,6)})
CSPlotOrder(LGU3, P7, 46, "Lair1", nil, 1, 20, LGU3, 0, Patrol , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,6)})
CSPlotOrder(LSU, P6, 43, "Lair1", nil, 1, 20, LSU, 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,6)})
CSPlotOrder(LSU2, P7, 16, "Lair1", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,6)})

---이펙트

CSPlot(LSU, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[4] * SDspeed,6)})
CSPlot(LSU2, P6, 94, "Lair1", nil,1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[5] * SDspeed,6)})
CSPlot(LSU3, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[6] * SDspeed,6)})
CSPlot(LSU4, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[7] * SDspeed,6)})
CSPlot(LSU5, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[8] * SDspeed,6)})

---- 4gen ---

CSPlotOrder(LGU1, P7, 51, "Lair1", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,6)})
CSPlotOrder(LGU2, P6, 16, "Lair1", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,6)})
CSPlotOrder(LGU3, P7, 46, "Lair1", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,6)})
CSPlotOrder(LSU, P6, 43, "Lair1", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,6)})
CSPlotOrderWithProperties(LSU3, P6, 62, "Lair1", nil, 1, 20, LSU3, 0, Attack , "Lair1", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,6)},nil,0,TempProperties)

----- effect with unit ------

CSPlot(sixline, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,6)})
CSPlotOrderWithProperties(sixline, P6, 44, "Lair1", nil, 1, 20, sixline, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,6)},nil,0,TempProperties)

CSPlot(LGU1, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,6)})
CSPlotOrderWithProperties(LGU1, P6, 43, "Lair1", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,6)},nil,0,TempProperties)

CSPlot(LGU2, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,6)})
CSPlotOrderWithProperties(LGU2, P6, 44, "Lair1", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,6)},nil,0,TempProperties)

CSPlot(LGU3, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,6)})
CSPlotOrderWithProperties(LGU3, P6, 62, "Lair1", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,6)},nil,0,TempProperties)

CSPlot(Eftstar, P6, 94, "Lair1", nil, 1, 20, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,6)})
CSPlotOrderWithProperties(Eftstar, P6, 43, "Lair1", nil, 1, 20, Eftstar, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair1"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,6)},nil,0,TempProperties)


Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(132, "Lair2");
	},
	actions = {
		SetDeaths(P10,Add,1,7);
		PreserveTrigger();
	}
}

---- 1젠 ----
CSPlotOrder(LGU1, P6, 39, "Lair2", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,7)})
CSPlotOrder(LGU2, P6, 51, "Lair2", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,7)})
CSPlotOrder(LGU3, P6, 46, "Lair2", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,7)})
CSPlotOrder(LSU, P6, 43, "Lair2", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,7)})
CSPlotOrder(LSU2, P6, 44, "Lair2", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,7)})

---2젠
CSPlotOrder(LGU1, P6, 39, "Lair2", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,7)})
CSPlotOrder(LGU2, P7, 51, "Lair2", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,7)})
CSPlotOrder(LGU3, P6, 46, "Lair2", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,7)})
CSPlotOrder(LSU, P7, 43, "Lair2", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,7)})
CSPlotOrder(LSU2, P6, 44, "Lair2", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,7)})
--- 3젠
CSPlotOrder(LGU1, P7, 16, "Lair2", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,7)})
CSPlotOrder(LGU2, P6, 51, "Lair2", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,7)})
CSPlotOrder(LGU3, P7, 46, "Lair2", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,7)})
CSPlotOrder(LSU, P6, 43, "Lair2", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,7)})
CSPlotOrder(LSU2, P7, 16, "Lair2", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,7)})

---이펙트

CSPlot(LSU, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[4] * SDspeed,7)})
CSPlot(LSU2, P6, 94, "Lair2", nil,1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[5] * SDspeed,7)})
CSPlot(LSU3, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[6] * SDspeed,7)})
CSPlot(LSU4, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[7] * SDspeed,7)})
CSPlot(LSU5, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[8] * SDspeed,7)})

---- 4gen ---

CSPlotOrder(LGU1, P7, 51, "Lair2", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,7)})
CSPlotOrder(LGU2, P6, 16, "Lair2", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,7)})
CSPlotOrder(LGU3, P7, 46, "Lair2", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,7)})
CSPlotOrder(LSU, P6, 43, "Lair2", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,7)})
CSPlotOrderWithProperties(LSU3, P6, 62, "Lair2", nil, 1, 20, LSU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,7)},nil,0,TempProperties)

----- effect with unit ------

CSPlot(sixline, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,7)})
CSPlotOrderWithProperties(sixline, P6, 44, "Lair2", nil, 1, 20, sixline, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,7)},nil,0,TempProperties)

CSPlot(LGU1, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,7)})
CSPlotOrderWithProperties(LGU1, P6, 43, "Lair2", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,7)},nil,0,TempProperties)

CSPlot(LGU2, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,7)})
CSPlotOrderWithProperties(LGU2, P6, 44, "Lair2", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,7)},nil,0,TempProperties)

CSPlot(LGU3, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,7)})
CSPlotOrderWithProperties(LGU3, P6, 62, "Lair2", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,7)},nil,0,TempProperties)

CSPlot(Eftstar, P6, 94, "Lair2", nil, 1, 20, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,7)})
CSPlotOrderWithProperties(Eftstar, P6, 43, "Lair2", nil, 1, 20, Eftstar, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair2"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,7)},nil,0,TempProperties)

Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(132, "Lair3");
	},
	actions = {
		SetDeaths(P10,Add,1,8);
		PreserveTrigger();
	}
}

---- 1젠 ----
CSPlotOrder(LGU1, P6, 39, "Lair3", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,8)})
CSPlotOrder(LGU2, P6, 51, "Lair3", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,8)})
CSPlotOrder(LGU3, P6, 46, "Lair3", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,8)})
CSPlotOrder(LSU, P6, 43, "Lair3", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,8)})
CSPlotOrder(LSU2, P6, 44, "Lair3", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,8)})

---2젠
CSPlotOrder(LGU1, P6, 39, "Lair3", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,8)})
CSPlotOrder(LGU2, P7, 51, "Lair3", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,8)})
CSPlotOrder(LGU3, P6, 46, "Lair3", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,8)})
CSPlotOrder(LSU, P7, 43, "Lair3", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,8)})
CSPlotOrder(LSU2, P6, 44, "Lair3", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,8)})
--- 3젠
CSPlotOrder(LGU1, P7, 16, "Lair3", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,8)})
CSPlotOrder(LGU2, P6, 51, "Lair3", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,8)})
CSPlotOrder(LGU3, P7, 46, "Lair3", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,8)})
CSPlotOrder(LSU, P6, 43, "Lair3", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,8)})
CSPlotOrder(LSU2, P7, 16, "Lair3", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,8)})

---이펙트

CSPlot(LSU, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[4] * SDspeed,8)})
CSPlot(LSU2, P6, 94, "Lair3", nil,1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[5] * SDspeed,8)})
CSPlot(LSU3, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[6] * SDspeed,8)})
CSPlot(LSU4, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[7] * SDspeed,8)})
CSPlot(LSU5, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[8] * SDspeed,8)})

---- 4gen ---

CSPlotOrder(LGU1, P7, 51, "Lair3", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,8)})
CSPlotOrder(LGU2, P6, 16, "Lair3", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,8)})
CSPlotOrder(LGU3, P7, 46, "Lair3", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,8)})
CSPlotOrder(LSU, P6, 43, "Lair3", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,8)})
CSPlotOrderWithProperties(LSU3, P6, 62, "Lair3", nil, 1, 20, LSU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,8)},nil,0,TempProperties)

----- effect with unit ------

CSPlot(sixline, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,8)})
CSPlotOrderWithProperties(sixline, P6, 44, "Lair3", nil, 1, 20, sixline, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,6)},nil,0,TempProperties)

CSPlot(LGU1, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,8)})
CSPlotOrderWithProperties(LGU1, P6, 43, "Lair3", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,6)},nil,0,TempProperties)

CSPlot(LGU2, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,8)})
CSPlotOrderWithProperties(LGU2, P6, 44, "Lair3", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,6)},nil,0,TempProperties)

CSPlot(LGU3, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,8)})
CSPlotOrderWithProperties(LGU3, P6, 62, "Lair3", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,6)},nil,0,TempProperties)

CSPlot(Eftstar, P6, 94, "Lair3", nil, 1, 20, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,8)})
CSPlotOrderWithProperties(Eftstar, P6, 43, "Lair3", nil, 1, 20, Eftstar, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair3"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,8)},nil,0,TempProperties)

Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(132, "Lair4");
	},
	actions = {
		SetDeaths(P10,Add,1,9);
		PreserveTrigger();
	}
}

---- 1젠 ----
CSPlotOrder(LGU1, P6, 39, "Lair4", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,9)})
CSPlotOrder(LGU2, P6, 51, "Lair4", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,9)})
CSPlotOrder(LGU3, P6, 46, "Lair4", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,9)})
CSPlotOrder(LSU, P6, 43, "Lair4", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,9)})
CSPlotOrder(LSU2, P6, 44, "Lair4", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[1] * SDspeed,9)})

---2젠
CSPlotOrder(LGU1, P6, 39, "Lair4", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,9)})
CSPlotOrder(LGU2, P7, 51, "Lair4", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,9)})
CSPlotOrder(LGU3, P6, 46, "Lair4", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,9)})
CSPlotOrder(LSU, P7, 43, "Lair4", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,9)})
CSPlotOrder(LSU2, P6, 44, "Lair4", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[2] * SDspeed,9)})
--- 3젠
CSPlotOrder(LGU1, P7, 16, "Lair4", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,9)})
CSPlotOrder(LGU2, P6, 51, "Lair4", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,9)})
CSPlotOrder(LGU3, P7, 46, "Lair4", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,9)})
CSPlotOrder(LSU, P6, 43, "Lair4", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,9)})
CSPlotOrder(LSU2, P7, 16, "Lair4", nil, 1, 20, LSU2, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[3] * SDspeed,9)})

---이펙트

CSPlot(LSU, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[4] * SDspeed,9)})
CSPlot(LSU2, P6, 94, "Lair4", nil,1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[5] * SDspeed,9)})
CSPlot(LSU3, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[6] * SDspeed,9)})
CSPlot(LSU4, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[7] * SDspeed,9)})
CSPlot(LSU5, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[8] * SDspeed,9)})

---- 4gen ---

CSPlotOrder(LGU1, P7, 51, "Lair4", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,9)})
CSPlotOrder(LGU2, P6, 16, "Lair4", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,9)})
CSPlotOrder(LGU3, P7, 46, "Lair4", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,9)})
CSPlotOrder(LSU, P6, 43, "Lair4", nil, 1, 20, LSU, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,9)})
CSPlotOrderWithProperties(LSU3, P6, 62, "Lair4", nil, 1, 20, LSU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[9] * SDspeed,9)},nil,0,TempProperties)

----- effect with unit ------

CSPlot(sixline, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,9)})
CSPlotOrderWithProperties(sixline, P6, 44, "Lair4", nil, 1, 20, sixline, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,9)},nil,0,TempProperties)

CSPlot(LGU1, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[10] * SDspeed,9)})
CSPlotOrderWithProperties(LGU1, P6, 43, "Lair4", nil, 1, 20, LGU1, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,9)},nil,0,TempProperties)

CSPlot(LGU2, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[11] * SDspeed,9)})
CSPlotOrderWithProperties(LGU2, P6, 44, "Lair4", nil, 1, 20, LGU2, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,9)},nil,0,TempProperties)

CSPlot(LGU3, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[12] * SDspeed,9)})
CSPlotOrderWithProperties(LGU3, P6, 62, "Lair4", nil, 1, 20, LGU3, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[13] * SDspeed,9)},nil,0,TempProperties)

CSPlot(Eftstar, P6, 94, "Lair4", nil, 1, 20, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,9)})
CSPlotOrderWithProperties(Eftstar, P6, 43, "Lair4", nil, 1, 20, Eftstar, 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(132, "Lair4"), Deaths(P10, AtLeast, LairTimeline[14] * SDspeed,9)},nil,0,TempProperties)

--- Hive -----
HiveGenTime = { 1.79, 2.7, 3.60, 4.57, 5.5, 6.5, 7.5, 8.4, 9.3, 10.2, 11.1, 12, 12.9, 13.8, 14.7, 15.8}
HiveEftTime = {2.22, 3.18, 4.15, 5.07, 6, 7, 7.9 ,8.8 ,9.7,10.6, 11.5, 12.4, 13.3, 14.2, 15.1}
HiveGenTime2 = {16.8, 18.7, 20.5, 22.4, 24.3, 26.1, 28, 29.9}
--- SDspeed * pharse timeline ----- 
HiveProperties = {
	clocked = false,
	burrowed = false,
	intransit = false,
	hallucinated = false,
	invincible = false,
	hitpoint = 70,
	shield = 50,
	energy = 0,
	resource = 0,
	hanger = 0,
}
EftProperties = {
	clocked = false,
	burrowed = false,
	intransit = false,
	hallucinated = false,
	invincible = false,
	hitpoint = 100,
	shield = 100,
	energy = 0,
	resource = 0,
	hanger = 0,
}


Line1 = CSMakeLineX(2,64,0,23,1)
Trdline = CSMakeLineX(3,64,0,28,1)
Trdline2 = CSMakeLineX(3,64,60,28,1)
Triangle1 = CSMakePolygonX(3, 64, 0, 18, 0)
Triangle2 = CSMakePolygonX(3, 64, 0, 61, 18)
Triangle3 = CSMakePolygonX(3, 64, 0, 61, 0)
HiveEtf1 = CSMakeSpiral(6, 16, 1/2, 40, 0, 130, 0)


Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(133, "Hive1");
	},
	actions = {
		SetDeaths(P10, Add, 1, 10);
		PreserveTrigger()
	}
}

CAPlot(CS_SortR(HiveEtf1,1),P6,84,"Hive1",nil,1,32,{1,0,0,0,HiveEtf1[1]/36,0},nil,P6,{CommandLeastAt(133,"Hive1")})
for i = 1 ,16 do
	Line1 = CSMakeLineX(2,64,90+11*i,17,1)
	CSPlotOrder(Line1,P6,56,"Hive1",nil,1,32,Line1,0,Attack, "bunkerHeal",nil,0,nil,P6,{CommandLeastAt(133, "Hive1"), Deaths(P10, Exactly, HiveGenTime[i] * SDspeed, 10)} )
end

for i = 1 ,15 do
	Line2 = CSMakeLineX(2,64,101+11*i,17,1)
	CSPlotWithProperties(Line2, P6, 84, "Hive1", nil, 1, 32, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveEftTime[i] * SDspeed, 10)},nil,0,EftProperties)
end

CSPlotOrder(Triangle2, P6, 38, "Hive1", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 10)})
CSPlotOrder(Triangle1, P6, 51, "Hive1", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 10)})


CSPlotOrder(LGU3, P6, 16, "Hive1", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 10)})
CSPlotOrder(LGU2, P6, 38, "Hive1", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 10)})
CSPlotOrder(LGU1, P6, 48, "Hive1", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 10)})


CSPlotOrderWithProperties(Trdline, P6, 69, "Hive1", nil, 1, 20, Trdline, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 10)},nil,0,HiveProperties)
CSPlotOrder(LGU3, P6, 16, "Hive1", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 10)})
CSPlotOrder(LGU2, P6, 38, "Hive1", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 10)})
CSPlotOrder(LGU1, P6, 51, "Hive1", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 10)})

CSPlotOrderWithProperties(Trdline2, P6, 62, "Hive1", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 10)},nil,0,HiveProperties)

CSPlotOrderWithProperties(Trdline, P6, 62, "Hive1", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 10)},nil,0,HiveProperties)

CSPlotOrder(LGU3, P6, 16, "Hive1", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 10)})
CSPlotOrder(LGU2, P6, 38, "Hive1", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 10)})
CSPlotOrder(LGU1, P6, 51, "Hive1", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 10)})

CSPlotOrder(Triangle2, P6, 38, "Hive1", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 10)})
CSPlotOrder(Triangle1, P6, 51, "Hive1", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 10)})

for e = 2,8 do
	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P7, 84, "Hive1", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,10)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 84, "Hive1", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,10)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P7, 84, "Hive1", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,10)})

	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P7, 51, "Hive1", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,10)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 16, "Hive1", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,10)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P7, 46, "Hive1", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive1"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,10)})
end

Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(133, "Hive2");
	},
	actions = {
		SetDeaths(P10, Add, 1, 11);
		PreserveTrigger()
	}
}

CAPlot(CS_SortR(HiveEtf1,1),P6,84,"Hive2",nil,1,32,{1,0,0,0,HiveEtf1[1]/36,0},nil,P6,{CommandLeastAt(133,"Hive2")})
for i = 1 ,16 do
	Line1 = CSMakeLineX(2,64,90+11*i,17,1)
	CSPlotOrder(Line1,P6,56,"Hive2",nil,1,32,Line1,0,Attack, "bunkerHeal",nil,0,nil,P6,{CommandLeastAt(133, "Hive2"), Deaths(P10, Exactly, HiveGenTime[i] * SDspeed, 11)} )
end

for i = 1 ,15 do
	Line2 = CSMakeLineX(2,64,101+11*i,17,1)
	CSPlotWithProperties(Line2, P6, 84, "Hive2", nil, 1, 32, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveEftTime[i] * SDspeed, 11)},nil,0,EftProperties)
end

CSPlotOrder(Triangle2, P6, 38, "Hive2", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 11)})
CSPlotOrder(Triangle1, P6, 51, "Hive2", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 11)})


CSPlotOrder(LGU3, P6, 16, "Hive2", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 11)})
CSPlotOrder(LGU2, P6, 38, "Hive2", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 11)})
CSPlotOrder(LGU1, P6, 48, "Hive2", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 11)})


CSPlotOrderWithProperties(Trdline, P6, 69, "Hive2", nil, 1, 20, Trdline, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 11)},nil,0,HiveProperties)
CSPlotOrder(LGU3, P6, 16, "Hive2", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 11)})
CSPlotOrder(LGU2, P6, 38, "Hive2", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 11)})
CSPlotOrder(LGU1, P6, 51, "Hive2", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 11)})

CSPlotOrderWithProperties(Trdline2, P6, 62, "Hive2", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 11)},nil,0,HiveProperties)

CSPlotOrderWithProperties(Trdline, P6, 62, "Hive2", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 11)},nil,0,HiveProperties)

CSPlotOrder(LGU3, P6, 16, "Hive2", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 11)})
CSPlotOrder(LGU2, P6, 38, "Hive2", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 11)})
CSPlotOrder(LGU1, P6, 51, "Hive2", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 11)})

CSPlotOrder(Triangle2, P6, 38, "Hive2", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 11)})
CSPlotOrder(Triangle1, P6, 51, "Hive2", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 11)})

for e = 2,8 do
	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P7, 84, "Hive2", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,11)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 84, "Hive2", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,11)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P7, 84, "Hive2", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,11)})

	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P7, 51, "Hive2", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,11)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 16, "Hive2", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,11)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P7, 46, "Hive2", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive2"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,11)})
end

Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(133, "Hive3");
	},
	actions = {
		SetDeaths(P10, Add, 1, 12);
		PreserveTrigger()
	}
}

CAPlot(CS_SortR(HiveEtf1,1),P6,84,"Hive3",nil,1,32,{1,0,0,0,HiveEtf1[1]/36,0},nil,P6,{CommandLeastAt(133,"Hive3")})
for i = 1 ,16 do
	Line1 = CSMakeLineX(2,64,90+11*i,17,1)
	CSPlotOrder(Line1,P6,56,"Hive3",nil,1,32,Line1,0,Attack, "bunkerHeal",nil,0,nil,P6,{CommandLeastAt(133, "Hive3"), Deaths(P10, Exactly, HiveGenTime[i] * SDspeed, 12)} )
end

for i = 1 ,15 do
	Line2 = CSMakeLineX(2,64,101+11*i,17,1)
	CSPlotWithProperties(Line2, P6, 84, "Hive3", nil, 1, 32, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveEftTime[i] * SDspeed, 12)},nil,0,EftProperties)
end

CSPlotOrder(Triangle2, P6, 38, "Hive3", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 12)})
CSPlotOrder(Triangle1, P6, 51, "Hive3", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 12)})


CSPlotOrder(LGU3, P6, 16, "Hive3", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 12)})
CSPlotOrder(LGU2, P6, 38, "Hive3", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 12)})
CSPlotOrder(LGU1, P6, 48, "Hive3", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 12)})


CSPlotOrderWithProperties(Trdline, P6, 69, "Hive3", nil, 1, 20, Trdline, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 12)},nil,0,HiveProperties)
CSPlotOrder(LGU3, P6, 16, "Hive3", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 12)})
CSPlotOrder(LGU2, P6, 38, "Hive3", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 12)})
CSPlotOrder(LGU1, P6, 51, "Hive3", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 12)})

CSPlotOrderWithProperties(Trdline2, P6, 62, "Hive3", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 12)},nil,0,HiveProperties)

CSPlotOrderWithProperties(Trdline, P6, 62, "Hive3", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 12)},nil,0,HiveProperties)

CSPlotOrder(LGU3, P6, 16, "Hive3", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 12)})
CSPlotOrder(LGU2, P6, 38, "Hive3", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 12)})
CSPlotOrder(LGU1, P6, 51, "Hive3", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 12)})

CSPlotOrder(Triangle2, P6, 38, "Hive3", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 12)})
CSPlotOrder(Triangle1, P6, 51, "Hive3", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 12)})

for e = 2,8 do
	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P7, 84, "Hive3", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,12)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 84, "Hive3", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,12)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P7, 84, "Hive3", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,12)})

	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P7, 51, "Hive3", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,12)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 16, "Hive3", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,12)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P7, 46, "Hive3", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P7, {CommandLeastAt(133, "Hive3"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,12)})
end


Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(133, "Hive4");
	},
	actions = {
		SetDeaths(P10, Add, 1, 14);
		PreserveTrigger()
	}
}

CAPlot(CS_SortR(HiveEtf1,1),P6,84,"Hive4",nil,1,32,{1,0,0,0,HiveEtf1[1]/36,0},nil,P6,{CommandLeastAt(133,"Hive4")})
for i = 1 ,16 do
	Line1 = CSMakeLineX(2,64,90+11*i,17,1)
	CSPlotOrder(Line1,P6,56,"Hive4",nil,1,32,Line1,0,Attack, "bunkerHeal",nil,0,nil,P6,{CommandLeastAt(133, "Hive4"), Deaths(P10, Exactly, HiveGenTime[i] * SDspeed, 14)} )
end

for i = 1 ,15 do
	Line2 = CSMakeLineX(2,64,101+11*i,17,1)
	CSPlotWithProperties(Line2, P6, 84, "Hive4", nil, 1, 32, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveEftTime[i] * SDspeed, 14)},nil,0,EftProperties)
end

CSPlotOrder(Triangle2, P6, 38, "Hive4", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 14)})
CSPlotOrder(Triangle1, P6, 51, "Hive4", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 14)})


CSPlotOrder(LGU3, P6, 16, "Hive4", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 14)})
CSPlotOrder(LGU2, P6, 38, "Hive4", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 14)})
CSPlotOrder(LGU1, P6, 48, "Hive4", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 14)})


CSPlotOrderWithProperties(Trdline, P6, 69, "Hive4", nil, 1, 20, Trdline, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 14)},nil,0,HiveProperties)
CSPlotOrder(LGU3, P6, 16, "Hive4", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 14)})
CSPlotOrder(LGU2, P6, 38, "Hive4", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 14)})
CSPlotOrder(LGU1, P6, 51, "Hive4", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 14)})

CSPlotOrderWithProperties(Trdline2, P6, 62, "Hive4", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 14)},nil,0,HiveProperties)

CSPlotOrderWithProperties(Trdline, P6, 62, "Hive4", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 14)},nil,0,HiveProperties)

CSPlotOrder(LGU3, P6, 16, "Hive4", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 14)})
CSPlotOrder(LGU2, P6, 38, "Hive4", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 14)})
CSPlotOrder(LGU1, P6, 51, "Hive4", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 14)})

CSPlotOrder(Triangle2, P6, 38, "Hive4", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 14)})
CSPlotOrder(Triangle1, P6, 51, "Hive4", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 14)})

for e = 2,8 do
	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P5, 84, "Hive4", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,14)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 84, "Hive4", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,14)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P5, 84, "Hive4", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,14)})

	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P5, 65, "Hive4", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,14)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 16, "Hive4", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,14)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P5, 46, "Hive4", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive4"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,14)})
end


Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(133, "Hive5");
	},
	actions = {
		SetDeaths(P10, Add, 1, 15);
		PreserveTrigger()
	}
}

CAPlot(CS_SortR(HiveEtf1,1),P6,84,"Hive5",nil,1,32,{1,0,0,0,HiveEtf1[1]/36,0},nil,P6,{CommandLeastAt(133,"Hive5")})
for i = 1 ,16 do
	Line1 = CSMakeLineX(2,64,90+11*i,17,1)
	CSPlotOrder(Line1,P6,56,"Hive5",nil,1,32,Line1,0,Attack, "bunkerHeal",nil,0,nil,P6,{CommandLeastAt(133, "Hive5"), Deaths(P10, Exactly, HiveGenTime[i] * SDspeed, 15)} )
end

for i = 1 ,15 do
	Line2 = CSMakeLineX(2,64,101+11*i,17,1)
	CSPlotWithProperties(Line2, P6, 84, "Hive5", nil, 1, 32, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveEftTime[i] * SDspeed, 15)},nil,0,EftProperties)
end

CSPlotOrder(Triangle2, P6, 38, "Hive5", nil, 1, 20, Triangle2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 15)})
CSPlotOrder(Triangle1, P6, 65, "Hive5", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[1] * SDspeed, 15)})


CSPlotOrder(LGU3, P6, 16, "Hive5", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 15)})
CSPlotOrder(LGU2, P6, 38, "Hive5", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 15)})
CSPlotOrder(LGU1, P6, 48, "Hive5", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 15)})


CSPlotOrderWithProperties(Trdline, P6, 70, "Hive5", nil, 1, 20, Trdline, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[5] * SDspeed, 15)},nil,0,HiveProperties)
CSPlotOrder(LGU3, P6, 16, "Hive5", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 15)})
CSPlotOrder(LGU2, P6, 38, "Hive5", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 15)})
CSPlotOrder(LGU1, P6, 51, "Hive5", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 15)})

CSPlotOrderWithProperties(Trdline2, P6, 70, "Hive5", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[9] * SDspeed, 15)},nil,0,HiveProperties)

CSPlotOrderWithProperties(Trdline, P6, 70, "Hive5", nil, 1, 20, Trdline2, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 13)},nil,0,HiveProperties)

CSPlotOrder(LGU3, P6, 16, "Hive5", nil, 1, 20, LGU3, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 15)})
CSPlotOrder(LGU2, P6, 38, "Hive5", nil, 1, 20, LGU2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 15)})
CSPlotOrder(LGU1, P6, 51, "Hive5", nil, 1, 20, LGU1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[13] * SDspeed, 15)})

CSPlotOrder(Triangle2, P6, 38, "Hive5", nil, 1, 20, Triangle2, 0, Patrol, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 15)})
CSPlotOrder(Triangle1, P6, 51, "Hive5", nil, 1, 20, Triangle1, 0, Attack, "bunkerHeal", nil,0 , nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime[16] * SDspeed, 15)})

for e = 2,8 do
	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P5, 84, "Hive5", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,15)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 84, "Hive5", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,15)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P5, 84, "Hive5", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Attack , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,15)})

	CSPlotOrder(CS_Rotate(LGU1,10*(e-1)), P5, 65, "Hive5", nil, 1, 20, CS_Rotate(LGU1,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,15)})
	CSPlotOrder(CS_Rotate(LGU2,10*(e-1)), P6, 16, "Hive5", nil, 1, 20, CS_Rotate(LGU2,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P6, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,15)})
	CSPlotOrder(CS_Rotate(LGU3,10*(e-1)), P5, 66, "Hive5", nil, 1, 20, CS_Rotate(LGU3,10*(e-1)), 0, Patrol , "bunkerHeal", nil, 0, nil, P5, {CommandLeastAt(133, "Hive5"), Deaths(P10, AtLeast, HiveGenTime2[e] * SDspeed,15)})
end



Starport_gen = {4.1, 6, 8, 12, 14, 16, 19.8, 21.8, 23.8, 27.7, 29.7, 31.7}

PA = CSMakePolygon(6,80,0,61,1)
PB = CSMakePolygon(6,80,0,37,1)
PC = CSMakePolygon(6,80,0,19,1)
PD = CSMakePolygon(6,80,0,7,0)
PE = CSMakePolygon(6,80,0,91,1)

PAA = CSMakePolygon(6,1,0,61,1)
PBA = CSMakePolygon(6,1,0,37,1)
PCA = CSMakePolygon(6,1,0,19,1)
PDA = CSMakePolygon(6,1,0,7,0)
PEA = CSMakePolygon(6,1,0,91,1)

arrival = CSMakePolygon(6,1,0,7,0)

Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(114, "Starport4");
	},
	actions = {
		SetDeaths(P10, Add, 1, 16);
		PreserveTrigger();
	}
}

for i = 1 , 31 do
	Trigger2(P6, {CommandLeastAt(114, "Starport4"), Deaths(P10, AtLeast, i, 16)} , {SetMemoryBA(0x657A9C, SetTo, i)})
end


for i = 1, 12, 2 do
	CSPlot(CS_Rotate(PE,23*i), P6, 84, "Starport4", nil, 1, 64, P5, {CommandLeastAt(114, "Starport4"), Deaths(P10, Exactly, 2, 16)})
    CSPlotOrder(CS_Rotate(PA,23*i), P6, 16, "Starport4", nil, 1, 64, PAA, 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport4"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 16)})
	CSPlotOrder(CS_Rotate(PB,23*i), P6, 66, "Starport4", nil, 1, 64, PBA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport4"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 16)})
	CSPlotOrder(CS_Rotate(PC,23*i), P6, 65, "Starport4", nil, 1, 64, PCA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport4"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 16)})
end

for e = 2, 12, 4 do
	CSPlotOrder(CS_Rotate(PE,23*(e/2)), P6, 96, "Starport4", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport4"),Deaths(P10, AtLeast, Starport_gen[e] * SDspeed, 16)})
end

for r = 4, 12, 4 do
	CSPlotOrder(CS_Rotate(PE,23*(r/2)), P6, 89, "Starport4", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport4"),Deaths(P10, AtLeast, Starport_gen[r] * SDspeed, 16)})	
end


Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(114, "Starport1");
	},
	actions = {
		SetDeaths(P10, Add, 1, 17);
		PreserveTrigger();
	}
}

for i = 1 , 31 do
	Trigger2(P6, {CommandLeastAt(114, "Starport1"), Deaths(P10, AtLeast, i, 17)} , {SetMemoryBA(0x657A9C, SetTo, i)})
end

for i = 1, 12, 2 do
    CSPlotOrder(PA, P6, 16, "Starport1", nil, 1, 64, PAA, 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport1"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 17)})
	CSPlotOrder(PB, P6, 66, "Starport1", nil, 1, 64, PBA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport1"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 17)})
	CSPlotOrder(PC, P6, 65, "Starport1", nil, 1, 64, PCA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport1"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 17)})
end

for e = 2, 12, 4 do
	CSPlotOrder(PE, P6, 96, "Starport1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport1"),Deaths(P10, AtLeast, Starport_gen[e] * SDspeed, 17)})
end

for r = 4, 12, 4 do
	CSPlotOrder(PE, P6, 89, "Starport1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport1"),Deaths(P10, AtLeast, Starport_gen[r] * SDspeed, 17)})	
end




Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(114, "Starport2");
	},
	actions = {
		SetDeaths(P10, Add, 1, 18);
		PreserveTrigger();
	}
}

for i = 1 , 31 do
	Trigger2(P6, {CommandLeastAt(114, "Starport2"), Deaths(P10, AtLeast, i, 18)} , {SetMemoryBA(0x657A9C, SetTo, i)})
end

for i = 1, 12, 2 do
    CSPlotOrder(PA, P6, 16, "Starport2", nil, 1, 64, PAA, 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport2"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 18)})
	CSPlotOrder(PB, P6, 66, "Starport2", nil, 1, 64, PBA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport2"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 18)})
	CSPlotOrder(PC, P6, 65, "Starport2", nil, 1, 64, PCA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport2"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 18)})
end

for e = 2, 12, 4 do
	CSPlotOrder(PE, P6, 96, "Starport2", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport2"),Deaths(P10, AtLeast, Starport_gen[e] * SDspeed, 18)})
end

for r = 4, 12, 4 do
	CSPlotOrder(PE, P6, 89, "Starport2", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport2"),Deaths(P10, AtLeast, Starport_gen[r] * SDspeed, 18)})	
end




Trigger {
	players = {P6},
	conditions = {
		CommandLeastAt(114, "Starport3");
	},
	actions = {
		SetDeaths(P10, Add, 1, 19);
		PreserveTrigger();
	}
}

for i = 1 , 31 do
	Trigger2(P6, {CommandLeastAt(114, "Starport3"), Deaths(P10, AtLeast, i, 19)} , {SetMemoryBA(0x657A9C, SetTo, i)})
end

for i = 1, 12, 2 do
    CSPlotOrder(PA, P6, 16, "Starport3", nil, 1, 64, PAA, 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport3"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 19)})
	CSPlotOrder(PB, P6, 66, "Starport3", nil, 1, 64, PBA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport3"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 19)})
	CSPlotOrder(PC, P6, 65, "Starport3", nil, 1, 64, PCA, 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport3"),Deaths(P10, AtLeast, Starport_gen[i] * SDspeed, 19)})
end

for e = 2, 12, 4 do
	CSPlotOrder(PE, P6, 96, "Starport3", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Patrol, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport3"),Deaths(P10, AtLeast, Starport_gen[e] * SDspeed, 19)})
end

for r = 4, 12, 4 do
	CSPlotOrder(PE, P6, 89, "Starport3", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(114, "Starport3"),Deaths(P10, AtLeast, Starport_gen[r] * SDspeed, 19)})	
end

SShape1 = CSMakeCircle(6,64,0,7,1)
SShape2 = CSMakeCircle(6,64,0,19,7)
SShape3 = CSMakeCircle(6,64,0,37,19)

E_Base = CSMakeCircle(6,30,0,91,61)
EllipseN = CS_RemoveStack(CS_MoveXY(CS_Distortion(E_Base,{3,0},{3,0},nil,nil),550,0),20)

EllipseArr = {EllipseN,CS_Rotate(EllipseN,45),CS_Rotate(EllipseN,90),CS_Rotate(EllipseN,135),CS_Rotate(EllipseN,180),CS_Rotate(EllipseN,225),CS_Rotate(EllipseN,270),CS_Rotate(EllipseN,315)}
EllipseIndex = {}


SH_Flower = CS_OverlapX(EllipseArr[1],EllipseArr[2],EllipseArr[3],EllipseArr[4],EllipseArr[5],EllipseArr[6],EllipseArr[7],EllipseArr[8])
StargateShapeArr = {SH_Flower}

StargateProperties = {
	clocked = false,
	burrowed = false,
	intransit = false,
	hallucinated = false,
	invincible = true,
	hitpoint = 100,
	shield = 100,
	energy = 0,
	resource = 0,
	hanger = 0,
}

StargatePropertiesHero = {
	clocked = false,
	burrowed = false,
	intransit = false,
	hallucinated = false,
	invincible = true,
	hitpoint = 70,
	shield = 50,
	energy = 0,
	resource = 0,
	hanger = 0,
	}


Trigger2(P8, {Always()}, SetAllianceStatus(Force1, Ally),preserved)
Trigger2(P6, {CommandLeastAt(167, "Stargate1")}, {SetDeaths(P10, Add, 1, 20)},preserved)
StargateGenTime = {
1.9, 2.4, 2.9, 3.4, 3.8, 4.3, 4.8, 5.2, 
9.6, 10.4, 10.9, 11.4, 11.9, 12.4, 12.9, 13.4, 
19.1, 19.5, 20, 20.5, 20.9, 
28.2, 32.4, 36.2, 40, 46.7, 47.1, 47.6, 55.3
}
StargateEftTime = {31.5, 31.9, 46.7, 47.1}

for i = 1, 16, 8 do
	CSPlotWithProperties(LGU1, P8, 65, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i] * SDspeed, 20)},nil,nil,StargateProperties)
	CSPlotWithProperties(LGU2, P8, 93, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+1] * SDspeed, 20)},nil,nil,StargateProperties)
	CSPlotWithProperties(LGU3, P8, 66, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+2] * SDspeed, 20)},nil,nil,StargateProperties)
	CSPlotWithProperties(LGU4, P8, 16, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+3] * SDspeed, 20)},nil,nil,StargateProperties)

	CSPlotWithProperties(SShape1, P8, 89, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+4] * SDspeed, 20)},nil,nil,StargateProperties)
	CSPlotWithProperties(SShape2, P8, 88, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+5] * SDspeed, 20)},nil,nil,StargateProperties)
	CSPlotWithProperties(SShape3, P8, 60, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+6] * SDspeed, 20)},nil,nil,StargatePropertiesHero)
	CSPlotOrder(PE, P6, 89, "Stargate1", nil, 1, 32, CSMakePolygon(6,1,0,91,1), 0, Attack, "bunkerHeal",nil , 0, nil, P6, {CommandLeastAt(167, "Stargate1"),Deaths(P10, AtLeast, StargateGenTime[i+7] * SDspeed, 20)})	
	CSPlotWithProperties(PE, P8, 84, "Stargate1", nil, 1, 64, P8, {CommandLeastAt(167, "bunkerHeal"), Deaths(P10, AtLeast, StargateGenTime[i+7] * SDspeed, 20)},nil,nil,StargateProperties)

	Trigger2(P6,{CommandLeastAt(167, "Stargate1"),Deaths(P10, Exactly, StargateGenTime[i+7] * SDspeed, 20) }, {GiveUnits(All,"Men" , P8, "Anywhere", P6),SetInvincibility(Disable, "Men", P6, "Anywhere"),Order("Men", P6, "Stargate1", Attack, "bunkerHeal")})
end

for i = 17,32 do
	-- CSPlotWithProperties(Shape, Owner, UnitId, Location, CenterXY, PerUnit, PlotSize, PlayerID, Condition, Action, Preserve, Properties)
end 









CIfEnd()

EndCtrig()
ErrorCheck()
EUDTurbo(FP)
-- 에러 체크 함수 선언 위치 --
--↑Tep에 그대로 붙여넣기-----



for i = 0, 10 do
if i%2 == 0 then
Trigger {
	players = {P1},
	conditions = {
		Memory(0x640B60+0xDA*i, Exactly, 0xEABDB2EA);
		Memory(0x640B64+0xDA*i, Exactly, 0x203AA0B3);	
	},
	actions = {
		SetMemory(0x640B60+0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
Trigger {
	players = {P1},
	conditions = {
		Memory(0x640B60+0xDA*i, Exactly, 0x4E524157);
		Memory(0x640B64+0xDA*i, Exactly, 0x3A474E49);	
	},
	actions = {
		SetMemory(0x640B60+0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
else
Trigger {
	players = {P1},
	conditions = {
		MemoryX(0x640B5E + 0xDA*i, Exactly, 0xB2EA0000,0xFFFF0000);
		Memory(0x640B62 + 0xDA*i, Exactly, 0xA0B3EABD);	
		MemoryX(0x640B66 + 0xDA*i, Exactly, 0x203A,0xFFFF);
	},
	actions = {
		SetMemory(0x640B5E + 0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
Trigger {
	players = {P1},
	conditions = {
		MemoryX(0x640B5E + 0xDA*i, Exactly, 0x41570000,0xFFFF0000);
		Memory(0x640B62 + 0xDA*i, Exactly, 0x4E494E52);	
		MemoryX(0x640B66 + 0xDA*i, Exactly, 0x00003A47,0xFFFF);
	},
	actions = {
		SetMemory(0x640B5E + 0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
end
end
