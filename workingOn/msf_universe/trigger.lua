
-- This text is generated by TrigEditPlus
--↓ Tep에 그대로 붙여넣기----------------------------------------
FP = P6
SetForces({P1,P2,P3,P4},{P6,P7,P8},{},{},{P1,P2,P3,P4,P6,P7,P8}) 
SetFixedPlayer(P6)
StartCtrig(1,nil,0,1)
CJump(AllPlayers,0)

CJumpEnd(AllPlayers,0)

Nextptrs = CreateVar(FP)
NoAirCollision(FP)
NoAirCollision(P7)
NoAirCollision(P8)
DoActions(FP,{SetSpeed(SetTo, "#X2")})
function RotatePlayer(Print,Players,RecoverCP)
	return CopyCpAction(Print,Players,RecoverCP)
end
-- 여기에 변수, 배열 및 Include류 함수 선언 --

Trigger {
	players = {P8},
	conditions = {
		Memory(0x58F44C,Exactly,1);
	},
	actions = {
		LeaderBoardScore(Kills,"\x1FP\x04oints -- [Ver. Test]");
	},
		flag = {Preserved}
}

Trigger {
	players = {P8},
	conditions = {
		Memory(0x58F44C,Exactly,121);
	},
	actions = {
		LeaderBoardScore(Custom,"\x06D\x04eaths -- [Ver. Test]");
	},
		flag = {Preserved}
}






Trigger {
	players = {P8},
	conditions = {
		Always();
	},
	actions = {
		SetMemory(0x58F44C, Add, 0x00000001);
	},
	flag = {Preserved}
}


Trigger {
	players = {P8},
	conditions = {
		Memory(0x58F44C,AtLeast,360);
	},
	actions = {
		SetMemory(0x58F44C, SetTo, 0x00000000);
	},
	flag = {Preserved}
}

Trigger { -- 
	players = {P8},
	conditions = {
	},
	actions = {
		SetMemory(0x6509A0, SetTo, 0x00000000);
	},
	flag = {Preserved}
}

Trigger { -- 컴퓨터 리더보드 비활성화
	players = {P6},
	conditions = {
			Always();
		},
	actions = {
			LeaderBoardComputerPlayers(Disable);
		}
}

-------- Exchance Trigger ----------

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 400);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 400, Kills);
		SetResources(CurrentPlayer, Add, 100, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 1000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 1000, Kills);
		SetResources(CurrentPlayer, Add, 250, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 2000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 2000, Kills);
		SetResources(CurrentPlayer, Add, 500, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 4000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 4000, Kills);
		SetResources(CurrentPlayer, Add, 1000, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 8000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 8000, Kills);
		SetResources(CurrentPlayer, Add, 2000, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 16000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 16000, Kills);
		SetResources(CurrentPlayer, Add, 4000, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 70000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 70000, Kills);
		SetResources(CurrentPlayer, Add, 17500, Ore);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 100000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 100000, Kills);
		SetResources(CurrentPlayer, Add, 25000, Ore);
		PreserveTrigger();
	},
}

Trigger { 
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 1000000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 1000000, Kills);
		SetResources(CurrentPlayer, Add, 250000, Ore);
		PreserveTrigger();
	},
}

Trigger { 
	players = {Force1},
	conditions = {
		Score(CurrentPlayer, Kills, AtLeast, 40000);
	},
	actions = {
		SetScore(CurrentPlayer, Subtract, 40000, Kills);
		SetResources(CurrentPlayer, Add, 10000, Ore);
		PreserveTrigger();
	},
}


Trigger{
	players = {AllPlayers},
	conditions = {
		Always();
	},
	actions = {
		ModifyUnitShields(All, "Buildings", Force2, "Anywhere", 100);
		ModifyUnitHitPoints(All, "Buildings", Force2, "Anywhere", 100);
	}
}

Trigger { 
	players = {Force2},
	conditions = {
		Always()
	},
	actions = {
		SetDeaths(P9,Add,1,201);
		PreserveTrigger()
	}
}

Trigger { -- 기지유닛 끌당
	players = {Force2},
	conditions = {
		Deaths(P9,Exactly,2000,201);
	},
	actions = {
		Order("Any unit",Force2,"Pulling",Attack,"HealZone");
		SetDeaths(P9,SetTo,0,201);
		PreserveTrigger()
	}
}



Trigger { -- 나간플레이어 유닛삭제
	players = {P8},
	conditions = {
			Always();
		},
	actions = {
			RemoveUnit("Men",P12);
			RemoveUnit(111,P12);
			RemoveUnit(107,P12);
			RemoveUnit(125,P12);
			PreserveTrigger()
		}
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		SetAllianceStatus(Force1,AlliedVictory);
		SetResources(P1, Add, 999999, Ore);
		SetResources(P2, Add, 999999, Ore);
		SetResources(P3, Add, 999999, Ore);
		SetResources(P4, Add, 999999, Ore);
	},
}

Trigger { -- 컴퓨터동맹설정
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		SetResources(P7, SetTo, 9999999, OreAndGas);
		SetResources(P6, SetTo, 9999999, OreAndGas);
		PreserveTrigger();
		SetAllianceStatus(Force1, Enemy);
	},
}

Trigger { 
	players = {Force2},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript('Turn ON Shared Vision for Player 1');
		RunAIScript('Turn ON Shared Vision for Player 2');
		RunAIScript('Turn ON Shared Vision for Player 3');
		RunAIScript('Turn ON Shared Vision for Player 4');
		RunAIScript('Turn ON Shared Vision for Player 5');
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript("Turn ON Shared Vision for Player 8");
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Always();
	},
	actions = {
		RunAIScript('Turn ON Shared Vision for Player 1');
		RunAIScript('Turn ON Shared Vision for Player 2');
		RunAIScript('Turn ON Shared Vision for Player 3');
		RunAIScript('Turn ON Shared Vision for Player 4');
		PreserveTrigger();
	},
}


Trigger { -- 특건 관련 트리거
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		Wait(1000);
		CreateUnit(1, 148, "makeOvermind", P7);
		CreateUnit(1, 127, "makeIoncannon", P7);
		CreateUnit(1, 175, "makeXelnaga", P7);
		CreateUnit(1, 174, "makeTemple", P7);
		CreateUnit(1, 152, "makeDaggoth", P7);
		CreateUnit(1, 200, "makepowergenerator", P7);
		CreateUnit(1, 168, "makestasiscell", P7);
		CreateUnit(1, 151, "makecelebrate", P7);
		SetInvincibility(Enable, 148, P7, "Anywhere");
		SetInvincibility(Enable, 127, P7, "Anywhere");
		SetInvincibility(Enable, 175, P7, "Anywhere");
		SetInvincibility(Enable, 168, P7, "Anywhere");

	},
}

Trigger{
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		CreateUnit(4, 77, "herofenixZ", P7);
		CreateUnit(4, 78, "herofenixD", P7);
		CreateUnit(4, 52, "herounclean", P7);
		CreateUnit(4, 104, "heroinfestduran", P7);
		CreateUnit(4, 70, "heroscout", P7);
		CreateUnit(4, 21, "herowraith", P7);
		CreateUnit(1, 23, "herotank", P7);
		CreateUnit(4, 93, "heromutant", P7);
		CreateUnit(4, 69, "heroMatriach", P7);
		CreateUnit(1, 28, "yamabattle", P7);
		CreateUnit(4, 62, "herodevour", P7);

	}
}

Trigger { -- fenix z
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 77);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Didymos \x11ﾟ.+｡ \x01을 \x06처치 \x04하였습니다 + 35000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 35000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- fenix d
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 78);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Dimorphos \x11ﾟ.+｡ \x01을 \x06처치 \x04하였습니다 + 40000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 40000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- unclean
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 52);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Biela’s Comet \x11ﾟ.+｡ \x01을 \x06처치 \x04하였습니다 + 45000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 45000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- inf duran
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 104);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Psyche \x11.+ﾟ｡ \x01을 \x06처치 \x04하였습니다 + 45000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 45000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- scout
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 70);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Restriction \x11.+ﾟ｡ \x01을 \x06처치 \x04하였습니다 + 50000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 50000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- No comment (ABB625F6)
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 21);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Aphophis \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 55000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 55000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- tank
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 23);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Comet Hyakutake \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 100000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- scantid
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 93);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03'Oumuamua \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 45000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- matriach
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 69);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Vesta \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 50000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- yamabattle
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 28);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Cassini \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 130000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}

Trigger { -- devour H
	players = {Force1},
	conditions = {
		Deaths(P7, AtLeast, 1, 62);
		Deaths(P9,Exactly,0,200)
	},
	actions = {
		DisplayText("\x13\x11｡˙+ﾟ\x08Ravagers \x03Bennu \x11.+ﾟ｡ \x01를 \x06처치 \x04하였습니다 + 100000 \x1FPoints!\x04", 4);
		SetScore(CurrentPlayer, Add, 65000, Kills);
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PlayWAV("staredit\\wav\\killsound.wav");
		PreserveTrigger();
	},
}



Trigger { -- 영작유닛 데스값 -1
	players = {P7},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(CurrentPlayer, Subtract, 1, 77);
		SetDeaths(CurrentPlayer, Subtract, 1, 78);
		SetDeaths(CurrentPlayer, Subtract, 1, 52);
		SetDeaths(CurrentPlayer, Subtract, 1, 104);
		SetDeaths(CurrentPlayer, Subtract, 1, 70);
		SetDeaths(CurrentPlayer, Subtract, 1, 21);
		SetDeaths(CurrentPlayer, Subtract, 1, 23);
		SetDeaths(CurrentPlayer, Subtract, 1, 93);
		SetDeaths(CurrentPlayer, Subtract, 1, 69);
		SetDeaths(CurrentPlayer, Subtract, 1, 28);
		SetDeaths(CurrentPlayer, Subtract, 1, 62);
		PreserveTrigger();
	},
}

Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer,Exactly,0,158);
		Bring(CurrentPlayer,AtLeast,1,12,"mainLocation")
	},
	actions = {
		RemoveUnitAt(1,12,"mainLocation",CurrentPlayer);
		DisplayText("브금ㄴㄴ");
		SetDeaths(CurrentPlayer,SetTo,1,158);
		PreserveTrigger()
	},
}

Trigger { -- off
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer,Exactly,1,158);
		Bring(CurrentPlayer,AtLeast,1,12,"mainLocation")
	},
	actions = {
		RemoveUnitAt(1,12,"mainLocation",CurrentPlayer);
		DisplayText("브금ㅇㅇ");
		SetDeaths(CurrentPlayer,SetTo,0,158);
		PreserveTrigger()
	},
}

------ 건작 브금 ------


Trigger { -- 경우 1 
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Zerg Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1666, "Zerg Flag Beacon");
		PlayWAV("staredit\\wav\\hat.ogg");
		PlayWAV("staredit\\wav\\hat.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Zerg Flag Beacon");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Zerg Beacon");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Zerg Beacon");
		PreserveTrigger();
	},
}

Trigger { -- 경우 2
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Unused Zerg Bldg 5");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1700, "Unused Zerg Bldg");
		PlayWAV("staredit\\wav\\Void.ogg");
		PlayWAV("staredit\\wav\\Void.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Zerg Bldg");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Unused Zerg Bldg 5");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Unused Zerg Bldg 5");
		PreserveTrigger();
	},
}

Trigger { -- 경우 3
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, Exactly, 1, "Unused Terran Bldg type   1");
		Deaths(CurrentPlayer, Exactly, 0, "Zerg Flag Beacon");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Terran Bldg type   2");
		Deaths(CurrentPlayer, Exactly, 0, "Unused Zerg Bldg");
		Deaths(CurrentPlayer, Exactly, 0, 158);
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 1734, "Unused Terran Bldg type   2");
		PlayWAV("staredit\\wav\\L1.ogg");
		PlayWAV("staredit\\wav\\L1.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 노래시간 감소
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(Force1, Subtract, 1, "Unused Terran Bldg type   2");
		PreserveTrigger();
	},
}

Trigger { -- 변수 초기화
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 1, "Unused Terran Bldg type   1");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Unused Terran Bldg type   1");
		PreserveTrigger();
	},
}

Trigger { -- Link with variation with trigger
	players = {Force1},
	conditions = {
		Deaths(P6, AtLeast, 1, 131);
	},
	actions = {
		DisplayText("Hatchery Destroyed! + 40000 Points");
		SetScore(CurrentPlayer, Add, 40000, Kills);
		SetDeaths(CurrentPlayer, SetTo, 1, "Zerg Beacon");
		PreserveTrigger();
	},
}


function SetMemoryBA(Offset,Type,Value)
	local ret = bit32.band(Offset, 0xFFFFFFFF)%4
	if ret == 0 then
		Mask = 0xFF
	elseif ret == 1 then
		Mask = 0xFF00
		Value = Value * 0x100
	elseif ret == 2 then
		Mask = 0xFF0000
		Value = Value * 0x10000
	elseif ret == 3 then
		Mask = 0xFF000000
		Value = Value * 0x1000000
	end
	return SetMemoryX(Offset-ret,Type,Value,Mask)
end
for i=0, 3 do -- 예약메딕

Trigger { -- 
	players = {i},
	conditions = {
		Always()
	},
	actions = {
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,1);
	},
}

Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,0,"Map Revealer");
		Bring(i,AtLeast,1,17,"Anywhere");
	},
	actions = {
		RemoveUnit(17,i);
		DisplayText("2Tic 예약메딕 사용 200 Ore.");
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,1);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,0);
		SetDeaths(i,SetTo,1,"Map Revealer");
		PreserveTrigger();
	},
}

Trigger { -- 
	players = {i},
	conditions = {
		Deaths(i,Exactly,1,"Map Revealer");
		Bring(i,AtLeast,1,17,"Anywhere");
	},
	actions = {
		RemoveUnit(17,i);
		DisplayText("예약메딕 사용안함 150 Ore.");
		SetMemoryBA(0x57F27C+(228*i)+2,SetTo,0);
		SetMemoryBA(0x57F27C+(228*i)+34,SetTo,1);
		SetDeaths(i,SetTo,0,"Map Revealer");
		PreserveTrigger();
	},
}

end
Trigger { -- 1틱메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, "Terran Medic");
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitShields(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit("Terran Medic", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 2틱메딕
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 2);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitShields(All, "Men", CurrentPlayer, "Anywhere", 100);
		RemoveUnit(2, CurrentPlayer);
		PreserveTrigger();
	},
}


Trigger { -- 일마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		CreateUnit(1, 0, "Location 1", CurrentPlayer);
		RemoveUnitAt(1, 0, "mainLocation", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 영마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		RemoveUnitAt(1, 20, "mainLocation", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}

Trigger { -- 스마 생산
	players = {AllPlayers},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 1, "mainLocation");
	},
	actions = {
		PlayWAV("staredit\\wav\\ghost_nevergiveup.ogg");
		RemoveUnitAt(1, 1, "mainLocation", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		PreserveTrigger();
	},
}

----------- Heal Zone -----------

Trigger {
	players = {Force1},
	conditions = {
		Deaths(CurrentPlayer, AtLeast, 100, "Young Chrysalis");
	},
	actions = {
		SetDeaths(CurrentPlayer, SetTo, 0, "Young Chrysalis");
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "HealZone", 100);
        ModifyUnitShields(All, "Men", CurrentPlayer, "HealZone", 100);
		PreserveTrigger();
	},
}


Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, "Any unit", "HealZone");
	},
	actions = {
		SetDeaths(CurrentPlayer, Add, 1, "Young Chrysalis");
		PreserveTrigger();
	},
}

------------ Bunker Heal Zone ----------
Trigger{
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 125, "bunkerHeal");
		},
	actions = {
		SetDeaths(P8, Add, 1, 176);
		PreserveTrigger();
	},
}


Trigger{
	players = {Force1},
	conditions = {
		Deaths(P8, AtLeast, 2, 176);
	},
	actions = {
		SetDeaths(P8, SetTo, 0, 176);
		ModifyUnitHitPoints(All, 125, CurrentPlayer, "bunkerHeal", 100);
		ModifyUnitShields(All, 125, CurrentPlayer, "bunkerHeal", 100);
		PreserveTrigger();
	},
}

------<  기부 트리거  >--------------------------------------------- [ GiveRateUnit = 8  ]
GText1 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F5,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText2 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F10,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText3 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F50,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText4 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F100,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText5 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F500,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
GText6 = "\x13\x1F─━┫ \x04기부금액 단위가 \x1F1,000 Ore \x04로 \x11변경\x04되었습니다. \x1F┣━─"
-- 1000 = 0 // 5000 = 1 // 10000 = 2 // 50000 = 3 // 100000 = 4 // 500000 = 5
GTable = {{0,1,GText1},{1,2,GText2},{2,3,GText3},{3,4,GText4},{4,5,GText5},{5,0,GText6}}
--Give Trig -- [ GiveUnit (58,60,69,71,72) ]
--GiveRate 0~5 [ 5000, 10000, 50000, 100000, 500000, 1000 ]

GiveRate = CreateNcode()

GiveRate2 = {1000,5000,10000,50000,100000,500000}
GiveUnitID = {58,60,69,71,72}
PlayerArr = {"\x08P1","\x0EP2","\x0FP3","\x10P4","\x11P5"}

CIf(Force1,{Bring(CurrentPlayer,AtLeast,1,11,"Anywhere")})

for i = 0, 3 do
for j = 1, 6 do
Trigger {
	players = {i},
	conditions = {
			Label(0);
			NDeaths(i,Exactly,GTable[j][1],GiveRate);
			Bring(CurrentPlayer,AtLeast,1,11,"Anywhere")
		},
	actions = {
			GiveUnits(all,11,i,"Anywhere",P12);
			ModifyUnitEnergy(all, 11, P12, "Anywhere", 0);
			RemoveUnit(11,P12);
			DisplayText(GTable[j][3],4);
			SetNDeaths(i,SetTo,GTable[j][2],GiveRate);
			PreserveTrigger();
		}
}

end end

CIfEnd()

for k = 0, 3 do
for j = 0, 3 do
if k~=j then
CIf(k,Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere"))
	for i = 0, 5 do
	Trigger {
			players = {k},
			conditions = {
					Label(0);
					Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere");
					PlayerCheck(j,1);
					NDeaths(k,Exactly,i,GiveRate);
					Accumulate(k,AtMost,GiveRate2[i+1],Ore);
				},
			actions = {
					ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
					RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
					DisplayText("\x1F─━┫ “ \x1F잔액\x04이 부족합니다.\x0F”",4);
					PreserveTrigger()
				},
		}
	Trigger {
			players = {k},
			conditions = {
					Label(0);
					Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere");
					PlayerCheck(j,1);
					NDeaths(k,Exactly,i,GiveRate);
					Accumulate(k,AtLeast,GiveRate2[i+1],Ore);
					Accumulate(k,AtMost,0x7FFFFFFF,Ore);
				},
			actions = {
					SetResources(k,Subtract,GiveRate2[i+1],Ore);
					SetResources(j,Add,GiveRate2[i+1],Ore);
					ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
					RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
					DisplayText("\x1F─━┫ “ "..PlayerArr[j+1].."\x04에게 \x1F"..GiveRate2[i+1].." Ore\x04를 기부하였습니다. \x0F”",4);
					SetMemory(0x6509B0,SetTo,j);
					DisplayText("\x1F─━┫ “ "..PlayerArr[k+1].."\x04에게 \x1F"..GiveRate2[i+1].." Ore\x04를 기부받았습니다. \x0F”",4);
					SetMemory(0x6509B0,SetTo,k);
					PreserveTrigger();
				},
		}
	end
Trigger {
	players = {k},
	conditions = {
			Label(0);
			Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere");
			PlayerCheck(j,0);
		},
	actions = {
			DisplayText("\x1F─━┫ “"..PlayerArr[j+1].."\x04이(가) 존재하지 않습니다. \x0F”",4);
			ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
			RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
			PreserveTrigger();
				},
		}
	
CIfEnd()
elseif k==j then
	TriggerX(k,{Bring(k,AtLeast,1,GiveUnitID[j+1],"Anywhere")},{
		ModifyUnitEnergy(all, GiveUnitID[j+1], k, "Anywhere", 0);
		RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
	},{Preserved})
end end end

--------------------- Ban Trigger ------------------------

BanText = "\x13\x1F─━┫【 \x04당신은 \x11방장에 의해 \x08강제퇴장 \x04당하였습니다.  \x1F】┣━─"
BanLocArr = {"banP1","banP2","banP3","banP4"}
for i = 0, 3 do
Trigger {
	players = {FP},
	conditions = {
			Label(0);
			Bring(Force1,AtLeast,1,15,BanLocArr[i+1]);
		},
	actions = {
			RotatePlayer({DisplayTextX(BanText)},{i},FP);
			RotatePlayer({Defeat()},{i},FP);
		}
}
end



Trigger { -- 일마  > 영마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P1},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_nevergiveup.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P2},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P3},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 일마  > 영마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 0, "convertH");
		Accumulate(CurrentPlayer, AtLeast, 10000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 10000, Ore);
		RemoveUnitAt(1, 0, "convertH", CurrentPlayer);
		CreateUnit(1, 20, "Location 1", CurrentPlayer);
		DisplayText("Convert Hero Text", 4);
		PlayWAV("staredit\\wav\\ghost_dead.ogg");
		PreserveTrigger();
	},
}

Trigger { -- 영마 > 스마 변환
	players = {P4},
	conditions = {
		Bring(CurrentPlayer, AtLeast, 1, 20, "convertH");
		Bring(CurrentPlayer, AtLeast, 1, 129, "Anywhere");
		Accumulate(CurrentPlayer, AtLeast, 15000, Ore);
	},
	actions = {
		SetResources(CurrentPlayer, Subtract, 15000, Ore);
		RemoveUnitAt(1, 20, "convertH", CurrentPlayer);
		CreateUnit(1, 1, "Location 1", CurrentPlayer);
		DisplayText("Convert Special Text", 4);
		PlayWAV("staredit\\wav\\ghost_living.ogg");
		PreserveTrigger();
	},
}

Trigger{
	players = {Force1},
	conditions = {
		Deaths(P7, Exactly, 1, 152);
	},
	actions = {
		DisplayText("\x13\x19｡˙+ﾟ\x11Special \x1fGuardians of \x19Galaxy\x19 ｡+ﾟ. 가 전장에 합류했습니다 !", 4);
	}
}


Trigger{ -- 해금
    players = {P1},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock1", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P2},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock2", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P3},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock3", CurrentPlayer);
    }
}

Trigger{ -- 해금
    players = {P4},
    conditions = {
        Deaths(P7, Exactly, 1, 152);
    },
    actions = {
        CreateUnit(1, 129, "unlock4", CurrentPlayer);
    }
}

-------------------------- Wave Trigger ------------------------------

WAVE1 = CSMakePolygon(4,50,0,25,5)
WAVE2 = CSMakePolygon(4,50,0,13,5)
WAVE3 = CSMakePolygon(4,50,45,9,5)

----------- 30 sec period --------

Trigger{
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P8, Add, 1, 131);
		PreserveTrigger();
	}
}

Trigger{
	players = {P6},
	conditions = {
		Deaths(P8, AtLeast, 1020, 131);
	},
	actions = {
		SetDeaths(P8, SetTo, 0, 131);
		PreserveTrigger();
	}
}

CSPlotOrder(WAVE1, P6, 40, "smallWave", nil, 1, 32, WAVE1, 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, 1, 131)},nil,1)
CSPlotOrder(WAVE2, P6, 44, "smallWave", nil, 1, 32, WAVE2, 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, 1, 131)},nil,1)
CSPlotOrder(WAVE3, P6, 51, "smallWave", nil, 1, 32, WAVE3, 0, Attack, "bunkerHeal", nil, 64, nil, P6,{Deaths(P8, Exactly, 1, 131)},nil,1)


------------------ Big Wave Trigger 132 -----------------
bigwave = {}

Trigger{
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P8, Add, 1, 132);
		PreserveTrigger()
	}
}

----todo : 1min : 16320 , using for function for big wave



------- 건작 ---------

Trigger { -- 건물데스값 -1
	players = {P6},
	conditions = {
		Always();
	},
	actions = {
		SetDeaths(P6,Subtract,1,131);
		SetDeaths(P6,Subtract,1,132);
		SetDeaths(P6,Subtract,1,133);
		SetDeaths(P7,Subtract,1,148);
		SetDeaths(P7,Subtract,1,151);
		SetDeaths(P7,Subtract,1,127);
		SetDeaths(P6,Subtract,1,111);
		SetDeaths(P6,Subtract,1,113);
		SetDeaths(P6,Subtract,1,114);
		SetDeaths(P7,Subtract,1,174);
		SetDeaths(P7,Subtract,1,175);
		SetDeaths(P7,Subtract,1,168);
		SetDeaths(P6,Subtract,1,160);
		SetDeaths(P6,Subtract,1,167);
		SetDeaths(P6,Subtract,1,154);
		PreserveTrigger()
	}
}

GunLock = CreateVar(P6)
GunLock = CreateVar(P7)
GunLock = CreateVar(P8)

CIf(P6,{NVar(GunLock,Exactly,0)})
square1 = CSMakePolygonX(4,80,0,36,0)
square2 = CSMakePolygonX(4,70,45,36,0)

Shape5 = CSMakePolygon(6,80,0,91,1)
Shape4 = CSMakePolygon(6,80,0,61,1)
Shape3 = CSMakePolygon(6,80,0,37,1)
Shape2 = CSMakePolygon(6,80,0,19,1)
Shape1 = CSMakePolygon(6,80,0,7,0)

sixline = CSMakeLine(6,180,0,13,0)
spiral1 = CSMakeSpiral(4, 16, 1/1.2, 40, 0, 37, 5)
spiral2 = CSMakeSpiral(4, 16, 1/1.2, 40, 45, 37, 5)


CX2 = CSMakeCircleX(6,80,30,30,0)

Trigger{
	players = {P6},
	conditions = {
		CommandLeastAt(131, "Hat1");
	},
	actions = {
		SetDeaths(P9,Add,1,0);
		PreserveTrigger();
	}
}
-- Hat1 hatchery phase 1
CSPlotOrder(square1, P6, 54, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 50,0)})
CSPlotOrder(square1, P7, 53, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 85, 0)})
CSPlotOrder(square1, P6, 40, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 115, 0)})
CSPlotOrder(spiral1, P6, 43, "Hat1", nil, 1, 10, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 180, 0)})
CSPlotOrder(square1, P7, 39, "Hat1", nil, 1, 16, square1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 145, 0)})

CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 275, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 310, 0)})
CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 345, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 380, 0)})

-- -- Hat1 hatchery phase 2
CSPlotOrder(square2, P7, 54, "Hat1", nil, 1, 20, square2, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 578, 0)})
CSPlotOrder(square2, P6, 53, "Hat1", nil, 1, 20, square2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 613, 0)})
CSPlotOrder(spiral1, P7, 43, "Hat1", nil, 1, 12, spiral1, 0, Patrol, "Location 1", nil, 0, nil, P7,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 640, 0)})
CSPlotOrder(spiral2, P6, 44, "Hat1", nil, 1, 12, spiral2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 691, 0)})
CSPlotOrder(square2, P6, 39, "Hat1", nil, 1, 20, square2, 0, Patrol, "Location 1", nil, 0, nil, P6,{CommandLeastAt(131, "Hat1"), Deaths(P9, AtLeast, 691, 0)})

-- for i = 1, 24 do
-- 	GLi = CSMakeLineX(1,60,0+15*i,7,1) -- 원그리기 1
-- 	CSPlot(GLi,P6,88,"Hat1",nil,1,32,P7,{CommandLeastAt(131, "Hat1"),Deaths(P9,Exactly,4*i,0)})
	
-- 	CSPlot(GLi,P6,60,"Hat1",nil,1,32,P7,{CommandLeastAt(131, "Hat1"),Deaths(P9,Exactly,800+4*i,0)})
	
-- 	end
	
-- 	CSPlot(CX2,P6,76,"Hat1",nil,1,32,P7,{CommandLeastAt(131, "Hat1"),Deaths(P9,Exactly,96,0)}) --외접원
-- 	CSPlot(CX2,P6,63,"Hat1",nil,1,32,P7,{CommandLeastAt(131, "Hat1"),Deaths(P9,Exactly,896,0)}) --외접원
	

-- Trigger { -- 6시 순대 오더 1
-- players = {P7},
-- conditions = {
-- 		CommandLeastAt(131, "Hat1");
-- 		Deaths(P9,Exactly,100,0);
-- 	},
-- actions = {
-- 		Order(88,P6,"Hat1",Attack,"HealZone");
-- 		Order(76,P6,"Hat1",Attack,"HealZone");
-- 	}
-- }

-- for j = 1, 24 do
-- GLj = CSMakeLineX(1,60,360-15*j,11,1) -- 원그리기 2
-- CSPlot(GLj,P6,89,"Hat1",nil,1,32,P7,{CommandLeastAt(131, "Hat1"),Deaths(P9,Exactly,400+4*j,0)})

-- CSPlot(GLj,P6,64,"Hat1",nil,1,32,P7,{CommandLeastAt(131, "Hat1"),Deaths(P9,Exactly,1200+4*j,0)})
-- end

-- Trigger { -- 6시 순대 오더 2
-- 	players = {P7},
-- 	conditions = {
-- 			CommandLeastAt(131, "Hat1");
-- 			Deaths(P9,Exactly,500,0);
-- 		},
-- 	actions = {
-- 			Order(89,P6,"Hat1",Attack,"HealZone");
-- 			Order(65,P6,"Hat1",Attack,"HealZone");
-- 		}
-- }

-- Trigger { -- 6시 순대 오더 4
-- 	players = {P7},
-- 	conditions = {
-- 			CommandLeastAt(131, "Hat1");
-- 			Deaths(P9,Exactly,1300,0);
-- 		},
-- 	actions = {
-- 			Order(64,P6,"Hat1",Attack,"HealZone");
-- 			Order(5,P6,"Hat1",Attack,"HealZone");
-- 		}
-- }
-- function SHBF(Y) return Y end
-- GA1 = CS_MoveXY(CS_InvertXY(CS_FillGradA(0,{0,512},270,18,"SHBF",0),270),-500,0) --A그라데이션
-- GA1D = CS_RatioXY(CS_MoveXY(CS_InvertXY(CS_FillGradA(0,{0,512},270,18,"SHBF",0),270),-500,0),0.1,0.1) --도착지 도형
-- CSPlotOrder(GA1,P8,25,"Hat1",nil,1,64,GA1D,0,Attack,"HealZone",nil,64,nil,P7,{CommandLeastAt(131,"Hat1"),Deaths(P9,Exactly,1500,0)})
-- CSPlotOrder(GA1,P8,96,"Hat1",nil,1,64,GA1D,0,Attack,"HealZone",nil,64,nil,P7,{CommandLeastAt(131,"Hat1"),Deaths(P9,Exactly,1500,0)})


CIfEnd()

EndCtrig()
ErrorCheck()
EUDTurbo(FP)
-- 에러 체크 함수 선언 위치 --
--↑Tep에 그대로 붙여넣기-----



for i = 0, 10 do
if i%2 == 0 then
Trigger {
	players = {P1},
	conditions = {
		Memory(0x640B60+0xDA*i, Exactly, 0xEABDB2EA);
		Memory(0x640B64+0xDA*i, Exactly, 0x203AA0B3);	
	},
	actions = {
		SetMemory(0x640B60+0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
Trigger {
	players = {P1},
	conditions = {
		Memory(0x640B60+0xDA*i, Exactly, 0x4E524157);
		Memory(0x640B64+0xDA*i, Exactly, 0x3A474E49);	
	},
	actions = {
		SetMemory(0x640B60+0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
else
Trigger {
	players = {P1},
	conditions = {
		MemoryX(0x640B5E + 0xDA*i, Exactly, 0xB2EA0000,0xFFFF0000);
		Memory(0x640B62 + 0xDA*i, Exactly, 0xA0B3EABD);	
		MemoryX(0x640B66 + 0xDA*i, Exactly, 0x203A,0xFFFF);
	},
	actions = {
		SetMemory(0x640B5E + 0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
Trigger {
	players = {P1},
	conditions = {
		MemoryX(0x640B5E + 0xDA*i, Exactly, 0x41570000,0xFFFF0000);
		Memory(0x640B62 + 0xDA*i, Exactly, 0x4E494E52);	
		MemoryX(0x640B66 + 0xDA*i, Exactly, 0x00003A47,0xFFFF);
	},
	actions = {
		SetMemory(0x640B5E + 0xDA*i,SetTo,0);
		PreserveTrigger();
	}
}
end
end
